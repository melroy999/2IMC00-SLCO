model Test {
	actions a b
	classes
	P {
	  variables Boolean v Integer m
	  ports In1 In2 InOut
	  state machines
		REC1 {
			initial R1_0
			transitions
				from R1_0 to R1_0 {
					receive P(v|not v) from In1
				}
		}
		REC2 {
			initial R2_0 states R2_1
			transitions
				from R2_0 to R2_1 {
					receive Q(m|m>=0) from In2
				}
				from R2_1 to R2_0 {
					m := m + 1
				}
		}
		SENDREC {
			initial S0 states S1 S2
			transitions
				from S0 to S1 {
					m = 5
				}
				from S1 to S2 {
					send S() to InOut
				}
				from S2 to S0 {
					receive T() from InOut
				}
		}
	}
	Q {
		variables Integer y
		ports Out1 Out2 InOut
		state machines
			COM {
				variables Boolean x
				initial Com0 states Com1 Com2
				transitions
					1: from Com0 to Com1 {
						send P(false) to Out1
					}
					from Com1 to Com1 {
						send Q(y) to Out2;
						y := y + 1;
					}
					from Com1 to Com2 {
						receive S() from InOut
					}
					from Com2 to Com0 {
						y := 0;
						send T() to InOut
					}
			}
	}
	objects p: P(), q : Q()
	channels
		c1(Boolean) async lossless from q.Out1 to p.In1
		c2(Integer) async lossy from q.Out2 to p.In2
		c3() sync between p.InOut and q.InOut
}
