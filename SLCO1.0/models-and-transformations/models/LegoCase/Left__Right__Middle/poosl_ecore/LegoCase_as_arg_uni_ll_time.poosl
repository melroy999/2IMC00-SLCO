<?xml version="1.0" encoding="ASCII"?>
<poosl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:poosl="poosl" name="LegoCase_as_arg_uni_ll_time">
  <classes xsi:type="poosl:ProcessClass" name="Environment">
    <variables name="BlockLeft" type="//@primitiveTypes.0"/>
    <variables name="BlockRight" type="//@primitiveTypes.0"/>
    <variables name="EnvironmentMiddleMotorBlockFellOff" type="//@primitiveTypes.0"/>
    <methods name="RightMotor_Start">
      <body xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.5">
        <message name="On"/>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.4"/>
    </methods>
    <methods name="MiddleMotor_Off">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.3">
            <message name="Right"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.5"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.3">
            <message name="Off"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.1"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.3">
            <message name="Left"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.6"/>
        </statementLists>
      </body>
    </methods>
    <methods name="LeftMotor_Start">
      <body xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.1">
        <message name="On"/>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.8"/>
    </methods>
    <methods name="RightMotor_Off">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.5">
            <message name="On"/>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.1">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant boolean="true" type="boolean"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.4"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.5">
            <message name="Off"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.3"/>
        </statementLists>
      </body>
    </methods>
    <methods name="RightMotor_Running">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.5">
            <message name="Off"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.3"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageSend" port="//@classes.0/@ports.4">
            <message name="Block"/>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.0/@ports.4">
            <message name="BlockPassed"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.4"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.5">
            <message name="On"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.4"/>
        </statementLists>
      </body>
    </methods>
    <methods name="MiddleMotor_Right">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.3">
            <message name="Off"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.1"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.1"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant boolean="true" type="boolean"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.2">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant boolean="true" type="boolean"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.1">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="boolean"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.5"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.3">
            <message name="Right"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.5"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.3">
            <message name="Left"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.6"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant boolean="true" type="boolean"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.0/@ports.2">
            <message name="Block"/>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.0/@ports.2">
            <message name="BlockPassed"/>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="boolean"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.5"/>
        </statementLists>
      </body>
    </methods>
    <methods name="MiddleMotor_Left">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.3">
            <message name="Off"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.1"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant boolean="true" type="boolean"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.2">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant boolean="true" type="boolean"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="boolean"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.6"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.3">
            <message name="Left"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.6"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.3">
            <message name="Right"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.5"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.1"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant boolean="true" type="boolean"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.0/@ports.2">
            <message name="Block"/>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.0/@ports.2">
            <message name="BlockPassed"/>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.1">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="boolean"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.6"/>
        </statementLists>
      </body>
    </methods>
    <methods name="LeftMotor_Off">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.1">
            <message name="On"/>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant boolean="true" type="boolean"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.8"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.1">
            <message name="Off"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.7"/>
        </statementLists>
      </body>
    </methods>
    <methods name="LeftMotor_Running">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.1">
            <message name="Off"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.7"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageSend" port="//@classes.0/@ports.0">
            <message name="Block"/>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.0/@ports.0">
            <message name="BlockPassed"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.8"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.1">
            <message name="On"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.8"/>
        </statementLists>
      </body>
    </methods>
    <methods name="Environment_initial">
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="boolean"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.1">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="boolean"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.2">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="boolean"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ParallelComposition">
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.0"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.1"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.2"/>
        </statementLists>
      </body>
    </methods>
    <ports name="LeftSensor"/>
    <ports name="LeftMotor"/>
    <ports name="MiddleSensor"/>
    <ports name="MiddleMotor"/>
    <ports name="RightSensor"/>
    <ports name="RightMotor"/>
    <initialMethodCall method="//@classes.0/@methods.9"/>
  </classes>
  <classes xsi:type="poosl:ProcessClass" name="Single_as">
    <methods name="Single_Start">
      <body xsi:type="poosl:MessageSend" port="//@classes.1/@ports.1">
        <message name="On"/>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.1"/>
    </methods>
    <methods name="Single_Running">
      <variables name="var_0" type="//@primitiveTypes.1"/>
      <body xsi:type="poosl:MessageReceive" port="//@classes.1/@ports.0">
        <message name="Block"/>
      </body>
      <body xsi:type="poosl:MessageReceive" port="//@classes.1/@ports.0">
        <message name="BlockPassed"/>
      </body>
      <body xsi:type="poosl:MessageSend" port="//@classes.1/@ports.1">
        <message name="Off"/>
      </body>
      <body xsi:type="poosl:MessageSend" port="//@classes.1/@ports.3">
        <message name="Signal"/>
        <expressionLists>
          <expressions xsi:type="poosl:ConstantExpression">
            <constant string="Send_Block"/>
          </expressions>
        </expressionLists>
      </body>
      <body xsi:type="poosl:MessageReceive" port="//@classes.1/@ports.2" variables="//@classes.1/@methods.1/@variables.0">
        <message name="Signal"/>
        <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@methods.1/@variables.0"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant string="Acknowledge_Block"/>
            </expressions>
          </parameterExpressionLists>
        </condition>
      </body>
      <body xsi:type="poosl:MessageSend" port="//@classes.1/@ports.1">
        <message name="On"/>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.1"/>
    </methods>
    <methods name="Single_as_initial">
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.0"/>
    </methods>
    <ports name="Sensor"/>
    <ports name="Motor"/>
    <ports name="Middle_in"/>
    <ports name="Middle_out"/>
    <initialMethodCall method="//@classes.1/@methods.2"/>
  </classes>
  <classes xsi:type="poosl:ProcessClass" name="Middle_as">
    <methods name="Middle_Idle">
      <variables name="var_5" type="//@primitiveTypes.1"/>
      <variables name="var_8" type="//@primitiveTypes.1"/>
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.2/@ports.4" variables="//@classes.2/@methods.0/@variables.0">
            <message name="Signal"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.2/@methods.0/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant string="Send_Block"/>
                </expressions>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.2/@ports.5">
            <message name="Signal"/>
            <expressionLists>
              <expressions xsi:type="poosl:ConstantExpression">
                <constant string="Acknowledge_Block"/>
              </expressions>
            </expressionLists>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.2/@ports.1">
            <message name="Right"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.2/@methods.1"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.2/@ports.2" variables="//@classes.2/@methods.0/@variables.1">
            <message name="Signal"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.2/@methods.0/@variables.1"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant string="Send_Block"/>
                </expressions>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.2/@ports.3">
            <message name="Signal"/>
            <expressionLists>
              <expressions xsi:type="poosl:ConstantExpression">
                <constant string="Acknowledge_Block"/>
              </expressions>
            </expressionLists>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.2/@ports.1">
            <message name="Left"/>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.2/@methods.1"/>
        </statementLists>
      </body>
    </methods>
    <methods name="Middle_Running">
      <body xsi:type="poosl:MessageReceive" port="//@classes.2/@ports.0">
        <message name="Block"/>
      </body>
      <body xsi:type="poosl:MessageReceive" port="//@classes.2/@ports.0">
        <message name="BlockPassed"/>
      </body>
      <body xsi:type="poosl:MessageSend" port="//@classes.2/@ports.1">
        <message name="Off"/>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.2/@methods.0"/>
    </methods>
    <methods name="Middle_as_initial">
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.2/@methods.0"/>
    </methods>
    <ports name="Sensor"/>
    <ports name="Motor"/>
    <ports name="Right_in"/>
    <ports name="Right_out"/>
    <ports name="Left_in"/>
    <ports name="Left_out"/>
    <initialMethodCall method="//@classes.2/@methods.2"/>
  </classes>
  <classes xsi:type="poosl:ProcessClass" name="ABP_Sender">
    <variables name="ABP_SenderSenders" type="//@primitiveTypes.2"/>
    <variables name="ABP_SenderSenderd" type="//@primitiveTypes.1"/>
    <methods name="Sender_Zero">
      <body xsi:type="poosl:MessageReceive" port="//@classes.3/@ports.0" variables="//@classes.3/@variables.1">
        <message name="Signal"/>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.3/@methods.1"/>
    </methods>
    <methods name="Sender_One">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.3/@ports.2">
            <message name="Acknowledge"/>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.3/@variables.0">
            <rightHandSide xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
              <objectExpressions xsi:type="poosl:ConstantExpression">
                <constant integer="1" type="integer"/>
              </objectExpressions>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.3/@variables.0"/>
              </parameterExpressionLists>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.3/@methods.0"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:TimeSynchronisation">
            <duration xsi:type="poosl:ConstantExpression">
              <constant integer="900" type="integer"/>
            </duration>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.3/@ports.1">
            <message name="Message"/>
            <expressionLists>
              <expressions xsi:type="poosl:VariableExpression" variable="//@classes.3/@variables.1"/>
            </expressionLists>
            <expressionLists>
              <expressions xsi:type="poosl:VariableExpression" variable="//@classes.3/@variables.0"/>
            </expressionLists>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.3/@methods.1"/>
        </statementLists>
      </body>
    </methods>
    <methods name="ABP_Sender_initial">
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.3/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.3/@methods.0"/>
    </methods>
    <ports name="ASOriginal"/>
    <ports name="ASReceiver"/>
    <ports name="ASAR"/>
    <initialMethodCall method="//@classes.3/@methods.2"/>
  </classes>
  <classes xsi:type="poosl:ProcessClass" name="ABP_AR">
    <variables name="ABP_ARARb" type="//@primitiveTypes.2"/>
    <methods name="AR_Zero">
      <variables name="var_13" type="//@primitiveTypes.2"/>
      <variables name="var_9" type="//@primitiveTypes.2"/>
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.4/@ports.0" variables="//@classes.4/@methods.0/@variables.0">
            <message name="Acknowledge"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.4/@methods.0/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.4/@variables.0"/>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.4/@ports.1">
            <message name="Acknowledge"/>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.4/@variables.0">
            <rightHandSide xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
              <objectExpressions xsi:type="poosl:ConstantExpression">
                <constant integer="1" type="integer"/>
              </objectExpressions>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.4/@variables.0"/>
              </parameterExpressionLists>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.4/@methods.0"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.4/@ports.0" variables="//@classes.4/@methods.0/@variables.1">
            <message name="Acknowledge"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.4/@methods.0/@variables.1"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
                  <objectExpressions xsi:type="poosl:ConstantExpression">
                    <constant integer="1" type="integer"/>
                  </objectExpressions>
                  <parameterExpressionLists>
                    <expressions xsi:type="poosl:VariableExpression" variable="//@classes.4/@variables.0"/>
                  </parameterExpressionLists>
                </expressions>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.4/@methods.0"/>
        </statementLists>
      </body>
    </methods>
    <methods name="ABP_AR_initial">
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.4/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.4/@methods.0"/>
    </methods>
    <ports name="AARAS"/>
    <ports name="AARSender"/>
    <initialMethodCall method="//@classes.4/@methods.1"/>
  </classes>
  <classes xsi:type="poosl:ProcessClass" name="ABP_Receiver">
    <variables name="ABP_ReceiverReceiverr" type="//@primitiveTypes.2"/>
    <variables name="ABP_ReceiverReceiverd" type="//@primitiveTypes.1"/>
    <methods name="Receiver_Zero">
      <variables name="var_4" type="//@primitiveTypes.2"/>
      <variables name="var_19" type="//@primitiveTypes.2"/>
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.5/@ports.1" variables="//@classes.5/@variables.1 //@classes.5/@methods.0/@variables.0">
            <message name="Message"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.5/@methods.0/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.5/@variables.0"/>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.5/@ports.0">
            <message name="Signal"/>
            <expressionLists>
              <expressions xsi:type="poosl:VariableExpression" variable="//@classes.5/@variables.1"/>
            </expressionLists>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.5/@ports.2">
            <message name="Acknowledge"/>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.5/@variables.0">
            <rightHandSide xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
              <objectExpressions xsi:type="poosl:ConstantExpression">
                <constant integer="1" type="integer"/>
              </objectExpressions>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.5/@variables.0"/>
              </parameterExpressionLists>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.5/@methods.0"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.5/@ports.1" variables="//@classes.5/@variables.1 //@classes.5/@methods.0/@variables.1">
            <message name="Message"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.5/@methods.0/@variables.1"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
                  <objectExpressions xsi:type="poosl:ConstantExpression">
                    <constant integer="1" type="integer"/>
                  </objectExpressions>
                  <parameterExpressionLists>
                    <expressions xsi:type="poosl:VariableExpression" variable="//@classes.5/@variables.0"/>
                  </parameterExpressionLists>
                </expressions>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.5/@methods.0"/>
        </statementLists>
      </body>
    </methods>
    <methods name="ABP_Receiver_initial">
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.5/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.5/@methods.0"/>
    </methods>
    <ports name="AROriginal"/>
    <ports name="ARSender"/>
    <ports name="ARAS"/>
    <initialMethodCall method="//@classes.5/@methods.1"/>
  </classes>
  <classes xsi:type="poosl:ProcessClass" name="ABP_AS">
    <variables name="ABP_ASASb" type="//@primitiveTypes.2"/>
    <methods name="AS_Zero">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.6/@ports.1">
            <message name="Acknowledge"/>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.6/@variables.0">
            <rightHandSide xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
              <objectExpressions xsi:type="poosl:ConstantExpression">
                <constant integer="1" type="integer"/>
              </objectExpressions>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.6/@variables.0"/>
              </parameterExpressionLists>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.6/@methods.0"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:TimeSynchronisation">
            <duration xsi:type="poosl:ConstantExpression">
              <constant integer="900" type="integer"/>
            </duration>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.6/@ports.0">
            <message name="Acknowledge"/>
            <expressionLists>
              <expressions xsi:type="poosl:VariableExpression" variable="//@classes.6/@variables.0"/>
            </expressionLists>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.6/@methods.0"/>
        </statementLists>
      </body>
    </methods>
    <methods name="ABP_AS_initial">
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.6/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="1" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.6/@methods.0"/>
    </methods>
    <ports name="AASAR"/>
    <ports name="AASReceiver"/>
    <initialMethodCall method="//@classes.6/@methods.1"/>
  </classes>
  <processInstances name="Right_as" class="//@classes.1"/>
  <processInstances name="Left_as" class="//@classes.1"/>
  <processInstances name="Middle_as" class="//@classes.2"/>
  <processInstances name="Environment" class="//@classes.0"/>
  <processInstances name="Right_as_Middle_outABP_Sender" class="//@classes.3"/>
  <processInstances name="Right_as_Middle_outABP_AR" class="//@classes.4"/>
  <processInstances name="Middle_as_Right_inABP_Receiver" class="//@classes.5"/>
  <processInstances name="Middle_as_Right_inABP_AS" class="//@classes.6"/>
  <processInstances name="Left_as_Middle_outABP_Sender" class="//@classes.3"/>
  <processInstances name="Left_as_Middle_outABP_AR" class="//@classes.4"/>
  <processInstances name="Middle_as_Left_inABP_Receiver" class="//@classes.5"/>
  <processInstances name="Middle_as_Left_inABP_AS" class="//@classes.6"/>
  <processInstances name="Middle_as_Right_outABP_Sender" class="//@classes.3"/>
  <processInstances name="Middle_as_Right_outABP_AR" class="//@classes.4"/>
  <processInstances name="Right_as_Middle_inABP_Receiver" class="//@classes.5"/>
  <processInstances name="Right_as_Middle_inABP_AS" class="//@classes.6"/>
  <processInstances name="Middle_as_Left_outABP_Sender" class="//@classes.3"/>
  <processInstances name="Middle_as_Left_outABP_AR" class="//@classes.4"/>
  <processInstances name="Left_as_Middle_inABP_Receiver" class="//@classes.5"/>
  <processInstances name="Left_as_Middle_inABP_AS" class="//@classes.6"/>
  <channels name="ELeftSensor_to_LSensor_as" port1="//@classes.0/@ports.0" port2="//@classes.1/@ports.0" processInstance1="//@processInstances.3" processInstance2="//@processInstances.1"/>
  <channels name="LMotor_to_ELeftMotor_as" port1="//@classes.1/@ports.1" port2="//@classes.0/@ports.1" processInstance1="//@processInstances.1" processInstance2="//@processInstances.3"/>
  <channels name="ERightSensor_to_RSensor_as" port1="//@classes.0/@ports.4" port2="//@classes.1/@ports.0" processInstance1="//@processInstances.3" processInstance2="//@processInstances.0"/>
  <channels name="RMotor_to_ERightMotor_as" port1="//@classes.1/@ports.1" port2="//@classes.0/@ports.5" processInstance1="//@processInstances.0" processInstance2="//@processInstances.3"/>
  <channels name="EMiddleSensor_to_MSensor_as" port1="//@classes.0/@ports.2" port2="//@classes.2/@ports.0" processInstance1="//@processInstances.3" processInstance2="//@processInstances.2"/>
  <channels name="MMotor_to_EMiddleMotor_as" port1="//@classes.2/@ports.1" port2="//@classes.0/@ports.3" processInstance1="//@processInstances.2" processInstance2="//@processInstances.3"/>
  <channels name="Right_as_Middle_out_Original_to_Sender" port1="//@classes.1/@ports.3" port2="//@classes.3/@ports.0" processInstance1="//@processInstances.0" processInstance2="//@processInstances.4"/>
  <channels name="Right_as_Middle_out_AR_to_Sender" port1="//@classes.4/@ports.1" port2="//@classes.3/@ports.2" processInstance1="//@processInstances.5" processInstance2="//@processInstances.4"/>
  <channels name="Middle_as_Right_in_Receiver_to_Original" port1="//@classes.5/@ports.0" port2="//@classes.2/@ports.2" processInstance1="//@processInstances.6" processInstance2="//@processInstances.2"/>
  <channels name="Middle_as_Right_in_Receiver_to_AS" port1="//@classes.5/@ports.2" port2="//@classes.6/@ports.1" processInstance1="//@processInstances.6" processInstance2="//@processInstances.7"/>
  <channels name="Right_as_Middle_out_Sender_to_Receiver" port1="//@classes.3/@ports.1" port2="//@classes.5/@ports.1" processInstance1="//@processInstances.4" processInstance2="//@processInstances.6"/>
  <channels name="Right_as_Middle_out_AS_to_AR" port1="//@classes.6/@ports.0" port2="//@classes.4/@ports.0" processInstance1="//@processInstances.7" processInstance2="//@processInstances.5"/>
  <channels name="Left_as_Middle_out_Original_to_Sender" port1="//@classes.1/@ports.3" port2="//@classes.3/@ports.0" processInstance1="//@processInstances.1" processInstance2="//@processInstances.8"/>
  <channels name="Left_as_Middle_out_AR_to_Sender" port1="//@classes.4/@ports.1" port2="//@classes.3/@ports.2" processInstance1="//@processInstances.9" processInstance2="//@processInstances.8"/>
  <channels name="Middle_as_Left_in_Receiver_to_Original" port1="//@classes.5/@ports.0" port2="//@classes.2/@ports.4" processInstance1="//@processInstances.10" processInstance2="//@processInstances.2"/>
  <channels name="Middle_as_Left_in_Receiver_to_AS" port1="//@classes.5/@ports.2" port2="//@classes.6/@ports.1" processInstance1="//@processInstances.10" processInstance2="//@processInstances.11"/>
  <channels name="Left_as_Middle_out_Sender_to_Receiver" port1="//@classes.3/@ports.1" port2="//@classes.5/@ports.1" processInstance1="//@processInstances.8" processInstance2="//@processInstances.10"/>
  <channels name="Left_as_Middle_out_AS_to_AR" port1="//@classes.6/@ports.0" port2="//@classes.4/@ports.0" processInstance1="//@processInstances.11" processInstance2="//@processInstances.9"/>
  <channels name="Middle_as_Right_out_Original_to_Sender" port1="//@classes.2/@ports.3" port2="//@classes.3/@ports.0" processInstance1="//@processInstances.2" processInstance2="//@processInstances.12"/>
  <channels name="Middle_as_Right_out_AR_to_Sender" port1="//@classes.4/@ports.1" port2="//@classes.3/@ports.2" processInstance1="//@processInstances.13" processInstance2="//@processInstances.12"/>
  <channels name="Right_as_Middle_in_Receiver_to_Original" port1="//@classes.5/@ports.0" port2="//@classes.1/@ports.2" processInstance1="//@processInstances.14" processInstance2="//@processInstances.0"/>
  <channels name="Right_as_Middle_in_Receiver_to_AS" port1="//@classes.5/@ports.2" port2="//@classes.6/@ports.1" processInstance1="//@processInstances.14" processInstance2="//@processInstances.15"/>
  <channels name="Middle_as_Right_out_Sender_to_Receiver" port1="//@classes.3/@ports.1" port2="//@classes.5/@ports.1" processInstance1="//@processInstances.12" processInstance2="//@processInstances.14"/>
  <channels name="Middle_as_Right_out_AS_to_AR" port1="//@classes.6/@ports.0" port2="//@classes.4/@ports.0" processInstance1="//@processInstances.15" processInstance2="//@processInstances.13"/>
  <channels name="Middle_as_Left_out_Original_to_Sender" port1="//@classes.2/@ports.5" port2="//@classes.3/@ports.0" processInstance1="//@processInstances.2" processInstance2="//@processInstances.16"/>
  <channels name="Middle_as_Left_out_AR_to_Sender" port1="//@classes.4/@ports.1" port2="//@classes.3/@ports.2" processInstance1="//@processInstances.17" processInstance2="//@processInstances.16"/>
  <channels name="Left_as_Middle_in_Receiver_to_Original" port1="//@classes.5/@ports.0" port2="//@classes.1/@ports.2" processInstance1="//@processInstances.18" processInstance2="//@processInstances.1"/>
  <channels name="Left_as_Middle_in_Receiver_to_AS" port1="//@classes.5/@ports.2" port2="//@classes.6/@ports.1" processInstance1="//@processInstances.18" processInstance2="//@processInstances.19"/>
  <channels name="Middle_as_Left_out_Sender_to_Receiver" port1="//@classes.3/@ports.1" port2="//@classes.5/@ports.1" processInstance1="//@processInstances.16" processInstance2="//@processInstances.18"/>
  <channels name="Middle_as_Left_out_AS_to_AR" port1="//@classes.6/@ports.0" port2="//@classes.4/@ports.0" processInstance1="//@processInstances.19" processInstance2="//@processInstances.17"/>
  <primitiveTypes primitiveTypeEnum="boolean"/>
  <primitiveTypes/>
  <primitiveTypes primitiveTypeEnum="integer"/>
</poosl:Model>
