///////////
//-------//
// Model //
//-------//
///////////

system specification LegoCase_as_arg_uni_ll()

behaviour specification
  (
   Right_as: Single_as[
     RMotor_to_ERightMotor_as/Motor,
     Right_as_Middle_out_Original_to_Sender/Middle_out,
     ERightSensor_to_RSensor_as/Sensor,
     Right_as_Middle_in_Receiver_to_Original/Middle_in
   ]
  ||
   Left_as: Single_as[
     LMotor_to_ELeftMotor_as/Motor,
     Left_as_Middle_out_Original_to_Sender/Middle_out,
     ELeftSensor_to_LSensor_as/Sensor,
     Left_as_Middle_in_Receiver_to_Original/Middle_in
   ]
  ||
   Middle_as: Middle_as[
     MMotor_to_EMiddleMotor_as/Motor,
     Middle_as_Right_out_Original_to_Sender/Right_out,
     Middle_as_Left_out_Original_to_Sender/Left_out,
     EMiddleSensor_to_MSensor_as/Sensor,
     Middle_as_Right_in_Receiver_to_Original/Right_in,
     Middle_as_Left_in_Receiver_to_Original/Left_in
   ]
  ||
   Environment: Environment[
     ELeftSensor_to_LSensor_as/LeftSensor,
     ERightSensor_to_RSensor_as/RightSensor,
     EMiddleSensor_to_MSensor_as/MiddleSensor,
     LMotor_to_ELeftMotor_as/LeftMotor,
     RMotor_to_ERightMotor_as/RightMotor,
     MMotor_to_EMiddleMotor_as/MiddleMotor
   ]
  ||
   Right_as_Middle_outABP_Sender: ABP_Sender[
     Right_as_Middle_out_Sender_to_Receiver/ASReceiver,
     Right_as_Middle_out_Original_to_Sender/ASOriginal,
     Right_as_Middle_out_AR_to_Sender/ASAR
   ]
  ||
   Right_as_Middle_outABP_AR: ABP_AR[
     Right_as_Middle_out_AR_to_Sender/AARSender,
     Right_as_Middle_out_AS_to_AR/AARAS
   ]
  ||
   Middle_as_Right_inABP_Receiver: ABP_Receiver[
     Middle_as_Right_in_Receiver_to_Original/AROriginal,
     Middle_as_Right_in_Receiver_to_AS/ARAS,
     Right_as_Middle_out_Sender_to_Receiver/ARSender
   ]
  ||
   Middle_as_Right_inABP_AS: ABP_AS[
     Right_as_Middle_out_AS_to_AR/AASAR,
     Middle_as_Right_in_Receiver_to_AS/AASReceiver
   ]
  ||
   Left_as_Middle_outABP_Sender: ABP_Sender[
     Left_as_Middle_out_Sender_to_Receiver/ASReceiver,
     Left_as_Middle_out_Original_to_Sender/ASOriginal,
     Left_as_Middle_out_AR_to_Sender/ASAR
   ]
  ||
   Left_as_Middle_outABP_AR: ABP_AR[
     Left_as_Middle_out_AR_to_Sender/AARSender,
     Left_as_Middle_out_AS_to_AR/AARAS
   ]
  ||
   Middle_as_Left_inABP_Receiver: ABP_Receiver[
     Middle_as_Left_in_Receiver_to_Original/AROriginal,
     Middle_as_Left_in_Receiver_to_AS/ARAS,
     Left_as_Middle_out_Sender_to_Receiver/ARSender
   ]
  ||
   Middle_as_Left_inABP_AS: ABP_AS[
     Left_as_Middle_out_AS_to_AR/AASAR,
     Middle_as_Left_in_Receiver_to_AS/AASReceiver
   ]
  ||
   Middle_as_Right_outABP_Sender: ABP_Sender[
     Middle_as_Right_out_Sender_to_Receiver/ASReceiver,
     Middle_as_Right_out_Original_to_Sender/ASOriginal,
     Middle_as_Right_out_AR_to_Sender/ASAR
   ]
  ||
   Middle_as_Right_outABP_AR: ABP_AR[
     Middle_as_Right_out_AR_to_Sender/AARSender,
     Middle_as_Right_out_AS_to_AR/AARAS
   ]
  ||
   Right_as_Middle_inABP_Receiver: ABP_Receiver[
     Right_as_Middle_in_Receiver_to_Original/AROriginal,
     Right_as_Middle_in_Receiver_to_AS/ARAS,
     Middle_as_Right_out_Sender_to_Receiver/ARSender
   ]
  ||
   Right_as_Middle_inABP_AS: ABP_AS[
     Middle_as_Right_out_AS_to_AR/AASAR,
     Right_as_Middle_in_Receiver_to_AS/AASReceiver
   ]
  ||
   Middle_as_Left_outABP_Sender: ABP_Sender[
     Middle_as_Left_out_Sender_to_Receiver/ASReceiver,
     Middle_as_Left_out_Original_to_Sender/ASOriginal,
     Middle_as_Left_out_AR_to_Sender/ASAR
   ]
  ||
   Middle_as_Left_outABP_AR: ABP_AR[
     Middle_as_Left_out_AR_to_Sender/AARSender,
     Middle_as_Left_out_AS_to_AR/AARAS
   ]
  ||
   Left_as_Middle_inABP_Receiver: ABP_Receiver[
     Left_as_Middle_in_Receiver_to_Original/AROriginal,
     Left_as_Middle_in_Receiver_to_AS/ARAS,
     Middle_as_Left_out_Sender_to_Receiver/ARSender
   ]
  ||
   Left_as_Middle_inABP_AS: ABP_AS[
     Middle_as_Left_out_AS_to_AR/AASAR,
     Left_as_Middle_in_Receiver_to_AS/AASReceiver
   ]
  )
  \
  {ELeftSensor_to_LSensor_as, LMotor_to_ELeftMotor_as, ERightSensor_to_RSensor_as, RMotor_to_ERightMotor_as, EMiddleSensor_to_MSensor_as, MMotor_to_EMiddleMotor_as, Right_as_Middle_out_Original_to_Sender, Right_as_Middle_out_AR_to_Sender, Middle_as_Right_in_Receiver_to_Original, Middle_as_Right_in_Receiver_to_AS, Right_as_Middle_out_Sender_to_Receiver, Right_as_Middle_out_AS_to_AR, Left_as_Middle_out_Original_to_Sender, Left_as_Middle_out_AR_to_Sender, Middle_as_Left_in_Receiver_to_Original, Middle_as_Left_in_Receiver_to_AS, Left_as_Middle_out_Sender_to_Receiver, Left_as_Middle_out_AS_to_AR, Middle_as_Right_out_Original_to_Sender, Middle_as_Right_out_AR_to_Sender, Right_as_Middle_in_Receiver_to_Original, Right_as_Middle_in_Receiver_to_AS, Middle_as_Right_out_Sender_to_Receiver, Middle_as_Right_out_AS_to_AR, Middle_as_Left_out_Original_to_Sender, Middle_as_Left_out_AR_to_Sender, Left_as_Middle_in_Receiver_to_Original, Left_as_Middle_in_Receiver_to_AS, Middle_as_Left_out_Sender_to_Receiver, Middle_as_Left_out_AS_to_AR}
 
//////////////////
//--------------//
// ProcessClass //
//--------------//
//////////////////

process class Environment()
instance variables
  BlockLeft: Boolean,
  BlockRight: Boolean,
  EnvironmentMiddleMotorBlockFellOff: Boolean
initial method call
  Environment_initial()()
instance methods
/* ------ ProcessMethod ------ */
  RightMotor_Start()()
    |  |
    RightMotor?On();
    RightMotor_Running()()
  .
/* ------ ProcessMethod ------ */
  MiddleMotor_Off()()
    |  |
    sel
      MiddleMotor?Right();
      MiddleMotor_Right()()
    or
      MiddleMotor?Off();
      MiddleMotor_Off()()
    or
      MiddleMotor?Left();
      MiddleMotor_Left()()
    les
  .
/* ------ ProcessMethod ------ */
  LeftMotor_Start()()
    |  |
    LeftMotor?On();
    LeftMotor_Running()()
  .
/* ------ ProcessMethod ------ */
  RightMotor_Off()()
    |  |
    sel
      RightMotor?On();
      BlockRight := true;
      RightMotor_Running()()
    or
      RightMotor?Off();
      RightMotor_Off()()
    les
  .
/* ------ ProcessMethod ------ */
  RightMotor_Running()()
    |  |
    sel
      RightMotor?Off();
      RightMotor_Off()()
    or
      RightSensor!Block();
      RightSensor!BlockPassed();
      RightMotor_Running()()
    or
      RightMotor?On();
      RightMotor_Running()()
    les
  .
/* ------ ProcessMethod ------ */
  MiddleMotor_Right()()
    |  |
    sel
      MiddleMotor?Off();
      MiddleMotor_Off()()
    or
      [(BlockRight=true)]skip;
      EnvironmentMiddleMotorBlockFellOff := true;
      BlockRight := false;
      MiddleMotor_Right()()
    or
      MiddleMotor?Right();
      MiddleMotor_Right()()
    or
      MiddleMotor?Left();
      MiddleMotor_Left()()
    or
      [(BlockLeft=true)]skip;
      MiddleSensor!Block();
      MiddleSensor!BlockPassed();
      BlockLeft := false;
      MiddleMotor_Right()()
    les
  .
/* ------ ProcessMethod ------ */
  MiddleMotor_Left()()
    |  |
    sel
      MiddleMotor?Off();
      MiddleMotor_Off()()
    or
      [(BlockLeft=true)]skip;
      EnvironmentMiddleMotorBlockFellOff := true;
      BlockLeft := false;
      MiddleMotor_Left()()
    or
      MiddleMotor?Left();
      MiddleMotor_Left()()
    or
      MiddleMotor?Right();
      MiddleMotor_Right()()
    or
      [(BlockRight=true)]skip;
      MiddleSensor!Block();
      MiddleSensor!BlockPassed();
      BlockRight := false;
      MiddleMotor_Left()()
    les
  .
/* ------ ProcessMethod ------ */
  LeftMotor_Off()()
    |  |
    sel
      LeftMotor?On();
      BlockLeft := true;
      LeftMotor_Running()()
    or
      LeftMotor?Off();
      LeftMotor_Off()()
    les
  .
/* ------ ProcessMethod ------ */
  LeftMotor_Running()()
    |  |
    sel
      LeftMotor?Off();
      LeftMotor_Off()()
    or
      LeftSensor!Block();
      LeftSensor!BlockPassed();
      LeftMotor_Running()()
    or
      LeftMotor?On();
      LeftMotor_Running()()
    les
  .
/* ------ ProcessMethod ------ */
  Environment_initial()()
    |  |
    BlockLeft := false;
    BlockRight := false;
    EnvironmentMiddleMotorBlockFellOff := false;
    par
      RightMotor_Start()()
    and
      MiddleMotor_Off()()
    and
      LeftMotor_Start()()
    rap
  .

//////////////////
//--------------//
// ProcessClass //
//--------------//
//////////////////

process class Single_as()
instance variables

initial method call
  Single_as_initial()()
instance methods
/* ------ ProcessMethod ------ */
  Single_Start()()
    |  |
    Motor!On();
    Single_Running()()
  .
/* ------ ProcessMethod ------ */
  Single_Running()()
    |   var_3: String |
    Sensor?Block();
    Sensor?BlockPassed();
    Motor!Off();
    Middle_out!Signal("Send_Block");
    Middle_in?Signal(var_3|(var_3="Acknowledge_Block"));
    Motor!On();
    Single_Running()()
  .
/* ------ ProcessMethod ------ */
  Single_as_initial()()
    |  |
    Single_Start()()
  .

//////////////////
//--------------//
// ProcessClass //
//--------------//
//////////////////

process class Middle_as()
instance variables

initial method call
  Middle_as_initial()()
instance methods
/* ------ ProcessMethod ------ */
  Middle_Idle()()
    |   var_8: String,  var_0: String |
    sel
      Left_in?Signal(var_8|(var_8="Send_Block"));
      Left_out!Signal("Acknowledge_Block");
      Motor!Right();
      Middle_Running()()
    or
      Right_in?Signal(var_0|(var_0="Send_Block"));
      Right_out!Signal("Acknowledge_Block");
      Motor!Left();
      Middle_Running()()
    les
  .
/* ------ ProcessMethod ------ */
  Middle_Running()()
    |  |
    Sensor?Block();
    Sensor?BlockPassed();
    Motor!Off();
    Middle_Idle()()
  .
/* ------ ProcessMethod ------ */
  Middle_as_initial()()
    |  |
    Middle_Idle()()
  .

//////////////////
//--------------//
// ProcessClass //
//--------------//
//////////////////

process class ABP_Sender()
instance variables
  ABP_SenderSenders: Integer,
  ABP_SenderSenderd: String
initial method call
  ABP_Sender_initial()()
instance methods
/* ------ ProcessMethod ------ */
  Sender_Zero()()
    |  |
    ASOriginal?Signal(ABP_SenderSenderd);
    Sender_One()()
  .
/* ------ ProcessMethod ------ */
  Sender_One()()
    |  |
    sel
      ASAR?Acknowledge();
      ABP_SenderSenders := (1-ABP_SenderSenders);
      Sender_Zero()()
    or
      ASReceiver!Message(ABP_SenderSenderd,ABP_SenderSenders);
      Sender_One()()
    les
  .
/* ------ ProcessMethod ------ */
  ABP_Sender_initial()()
    |  |
    ABP_SenderSenders := 0;
    Sender_Zero()()
  .

//////////////////
//--------------//
// ProcessClass //
//--------------//
//////////////////

process class ABP_AR()
instance variables
  ABP_ARARb: Integer
initial method call
  ABP_AR_initial()()
instance methods
/* ------ ProcessMethod ------ */
  AR_Zero()()
    |   var_9: Integer,  var_7: Integer |
    sel
      AARAS?Acknowledge(var_9|(var_9=ABP_ARARb));
      AARSender!Acknowledge();
      ABP_ARARb := (1-ABP_ARARb);
      AR_Zero()()
    or
      AARAS?Acknowledge(var_7|(var_7=(1-ABP_ARARb)));
      AR_Zero()()
    les
  .
/* ------ ProcessMethod ------ */
  ABP_AR_initial()()
    |  |
    ABP_ARARb := 0;
    AR_Zero()()
  .

//////////////////
//--------------//
// ProcessClass //
//--------------//
//////////////////

process class ABP_Receiver()
instance variables
  ABP_ReceiverReceiverr: Integer,
  ABP_ReceiverReceiverd: String
initial method call
  ABP_Receiver_initial()()
instance methods
/* ------ ProcessMethod ------ */
  Receiver_Zero()()
    |   var_12: Integer,  var_13: Integer |
    sel
      ARSender?Message(ABP_ReceiverReceiverd,var_12|(var_12=ABP_ReceiverReceiverr));
      AROriginal!Signal(ABP_ReceiverReceiverd);
      ARAS!Acknowledge();
      ABP_ReceiverReceiverr := (1-ABP_ReceiverReceiverr);
      Receiver_Zero()()
    or
      ARSender?Message(ABP_ReceiverReceiverd,var_13|(var_13=(1-ABP_ReceiverReceiverr)));
      Receiver_Zero()()
    les
  .
/* ------ ProcessMethod ------ */
  ABP_Receiver_initial()()
    |  |
    ABP_ReceiverReceiverr := 0;
    Receiver_Zero()()
  .

//////////////////
//--------------//
// ProcessClass //
//--------------//
//////////////////

process class ABP_AS()
instance variables
  ABP_ASASb: Integer
initial method call
  ABP_AS_initial()()
instance methods
/* ------ ProcessMethod ------ */
  AS_Zero()()
    |  |
    sel
      AASReceiver?Acknowledge();
      ABP_ASASb := (1-ABP_ASASb);
      AS_Zero()()
    or
      AASAR!Acknowledge(ABP_ASASb);
      AS_Zero()()
    les
  .
/* ------ ProcessMethod ------ */
  ABP_AS_initial()()
    |  |
    ABP_ASASb := 1;
    AS_Zero()()
  .


/*========================*/
/*------------------------*/
/* Primitive Data Classes */
/*------------------------*/
/*========================*/

data class Object
instance variables
instance methods
	error(ErrorMessage: String): Object primitive.
	deepCopy: Object primitive.
	=  (Operand2: Object): Boolean primitive.
	!= (Operand2: Object): Boolean primitive.
	== (Operand2: Object): Boolean primitive.
	!==(Operand2: Object): Boolean primitive.
	printString: String primitive.
	shallowCopy: Object primitive.

data class Number
extends Object
instance variables
instance methods

data class Integer
extends Object
instance variables
instance methods
	+  (Operand2: Number): Number primitive.
	/  (Operand2: Number): Number primitive.
	*  (Operand2: Number): Number primitive.
	-  (Operand2: Number): Number primitive.
	<  (Operand2: Number): Boolean primitive.
	>  (Operand2: Number): Boolean primitive.
	<= (Operand2: Number): Boolean primitive.
	>= (Operand2: Number): Boolean primitive.
	unaryMinus: Integer primitive.

	abs: Integer primitive.

	&  (Operand2: Integer): Integer primitive.
	|  (Operand2: Integer): Integer primitive.
	not: Integer primitive.

	sqrt: Number primitive.
	power(Operand2: Number): Number primitive.
	sqr: Integer primitive.

	div(Operand2: Integer): Integer primitive.
	modulo(Operand2: Number): Number primitive.

	asInteger: Integer primitive.
	asReal: Real primitive.
	asString: String primitive.
	printString: String primitive.

	fac: Integer primitive.
	monus(n: Integer): Integer if n > self then 0 else self - n fi.

data class Real
extends Object
instance variables
instance methods
	+  (Operand2: Number): Real primitive.
	/  (Operand2: Number): Real primitive.
	*  (Operand2: Number): Real primitive.
	-  (Operand2: Number): Real primitive.
	<  (Operand2: Number): Boolean primitive.
	>  (Operand2: Number): Boolean primitive.
	<= (Operand2: Number): Boolean primitive.
	>= (Operand2: Number): Boolean primitive.
	unaryMinus: Real primitive.

	acos: Real primitive.
	asin: Real primitive.
	atan: Real primitive.
	atan2(Denom: Real): Real primitive.
	cos: Real primitive.
	sin: Real primitive.
	tan: Real primitive.

	abs: Real primitive.

	log: Real primitive.
	ln: Real primitive.
	sqrt: Real primitive.
	exp: Real primitive.
	power(Operand2: Number): Real primitive.
	sqr: Real primitive.
	
	ceiling: Integer primitive.
	floor: Integer primitive.
	round: Integer primitive.

	div(Operand2: Number): Integer primitive.
	modulo(Operand2: Number): Real primitive.

	asInteger: Integer primitive.
	asReal: Real primitive.
	asString: String primitive.
	printString: String primitive.

primitive data class Boolean
extends Object
instance variables
instance methods
	&  (Operand2: Boolean): Boolean primitive.
	|  (Operand2: Boolean): Boolean primitive.
	not: Boolean primitive.
	printString: String primitive.

primitive data class Char
extends Object
instance variables
instance methods
	printString: String primitive.

primitive data class Array
extends Object
instance variables
instance methods
	get(FromPosition: Integer): Object primitive.
	getSize: Integer primitive.
	size(newSize: Integer): Array primitive.
	printString: String
		| i, s: Integer, Str: String |
		Str := "Array ("; i := 0; s := self getSize;
		while i < s do Str append(self get(i := i + 1) printString) append(if i < s then "," else ")" fi) od;
		Str.
	put(AtPosition: Integer, Element: Object): Array primitive.
	putAll(Element: Object): Array primitive.

primitive data class String
extends Object
instance variables
instance methods
	+  (aString: String): String primitive.
	<  (Operand2: String): Boolean primitive.
	>  (Operand2: String): Boolean primitive.
	<= (Operand2: String): Boolean primitive.
	>= (Operand2: String): Boolean primitive.    
	append(aString: String): String primitive.
	copy(From, To: Integer): String primitive.
	concat(aString: String): String primitive.
	cr: String primitive.
	get(FromPosition: Integer): Char primitive.
	length: Integer primitive.
	printString: String primitive.
	put(AtPosition: Integer, aChar: Char): String primitive.
	tab: String primitive.

primitive data class RandomGenerator
extends Object
instance variables
instance methods
	random: Real primitive.
	randomInt(n: Integer): Integer primitive.
	randomiseSeed: RandomGenerator primitive.
	setSeed(aSeed: Integer): RandomGenerator primitive.

primitive data class FileOut
extends Object
instance variables
instance methods
	append: FileOut primitive.
	destination(FileName: String): FileOut primitive.
	close: Object primitive.
	open: FileOut primitive.
	write(anObject: Object): FileOut
		self writeString(anObject printString append(' ')).
	writeln(anObject: Object): FileOut
		self writeString(anObject printString cr).
	writeString(aString: String): FileOut primitive.

primitive data class FileIn
extends Object
instance variables
instance methods
	open: FileIn primitive.
	close: Object primitive.
	readString: String primitive.
	readInteger: Integer primitive.
	readNumber: Object primitive.
	readReal: Real primitive.
	readBoolean: Boolean primitive.
	readChar: Char primitive.
	source(FileName: String): FileIn primitive.

