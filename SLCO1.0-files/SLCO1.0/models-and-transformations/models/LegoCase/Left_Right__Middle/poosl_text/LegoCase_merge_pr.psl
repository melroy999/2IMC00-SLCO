/*=================*/
/*-----------------*/
/* Process Classes */
/*-----------------*/
/*=================*/

/*==============*/
/*--------------*/
/* ProcessClass */
/*--------------*/
/*==============*/

process class Middle()
instance variables

communication channels
  Left,
  Right,
  Sensor,
  Motor
message interface
  Left?Block();
  Sensor?BlockPassed();
  Motor!Off();
  Motor!Left();
  Sensor?Block();
  Motor!Right();
  Right?Block()
initial method call
  Middle_initial()()
instance methods
/* ------ ProcessMethod ------ */
  Middle_Idle()()
    |  |
    sel
      Left?Block();
      Motor!Right();
      Middle_Running()()
    or
      Right?Block();
      Motor!Left();
      Middle_Running()()
    les
  .
/* ------ ProcessMethod ------ */
  Middle_Running()()
    |  |
    Sensor?Block();
    Sensor?BlockPassed();
    Motor!Off();
    Middle_Idle()()
  .
/* ------ ProcessMethod ------ */
  Middle_initial()()
    |  |
    Middle_Idle()()
  .

/*==============*/
/*--------------*/
/* ProcessClass */
/*--------------*/
/*==============*/

process class Environment()
instance variables
  BlockLeft: Boolean,
  BlockRight: Boolean,
  EnvironmentMiddleMotorBlockFellOff: Boolean
communication channels
  LeftSensor,
  LeftMotor,
  MiddleSensor,
  MiddleMotor,
  RightSensor,
  RightMotor
message interface
  LeftSensor!BlockPassed();
  MiddleMotor?Off();
  MiddleSensor!Block();
  MiddleMotor?Off();
  MiddleSensor!BlockPassed();
  RightSensor!Block();
  MiddleMotor?Left();
  MiddleSensor!BlockPassed();
  LeftMotor?On();
  MiddleMotor?Left();
  LeftSensor!Block();
  LeftMotor?Off();
  MiddleMotor?Left();
  MiddleMotor?Right();
  RightMotor?Off();
  RightMotor?On();
  LeftMotor?Off();
  MiddleSensor!Block();
  RightMotor?On();
  RightSensor!BlockPassed();
  RightMotor?Off();
  LeftMotor?On();
  MiddleMotor?Off();
  MiddleMotor?Right();
  MiddleMotor?Right();
  LeftMotor?On();
  RightMotor?On()
initial method call
  Environment_initial()()
instance methods
/* ------ ProcessMethod ------ */
  RightMotor_Start()()
    |  |
    RightMotor?On();
    RightMotor_Running()()
  .
/* ------ ProcessMethod ------ */
  MiddleMotor_Off()()
    |  |
    sel
      MiddleMotor?Right();
      MiddleMotor_Right()()
    or
      MiddleMotor?Off();
      MiddleMotor_Off()()
    or
      MiddleMotor?Left();
      MiddleMotor_Left()()
    les
  .
/* ------ ProcessMethod ------ */
  LeftMotor_Start()()
    |  |
    LeftMotor?On();
    LeftMotor_Running()()
  .
/* ------ ProcessMethod ------ */
  RightMotor_Off()()
    |  |
    sel
      RightMotor?On();
      BlockRight := true;
      RightMotor_Running()()
    or
      RightMotor?Off();
      RightMotor_Off()()
    les
  .
/* ------ ProcessMethod ------ */
  RightMotor_Running()()
    |  |
    sel
      RightMotor?Off();
      RightMotor_Off()()
    or
      RightSensor!Block();
      RightSensor!BlockPassed();
      RightMotor_Running()()
    or
      RightMotor?On();
      RightMotor_Running()()
    les
  .
/* ------ ProcessMethod ------ */
  MiddleMotor_Right()()
    |  |
    sel
      MiddleMotor?Off();
      MiddleMotor_Off()()
    or
      [(BlockRight=true)]skip;
      EnvironmentMiddleMotorBlockFellOff := true;
      BlockRight := false;
      MiddleMotor_Right()()
    or
      MiddleMotor?Right();
      MiddleMotor_Right()()
    or
      MiddleMotor?Left();
      MiddleMotor_Left()()
    or
      [(BlockLeft=true)]skip;
      MiddleSensor!Block();
      MiddleSensor!BlockPassed();
      BlockLeft := false;
      MiddleMotor_Right()()
    les
  .
/* ------ ProcessMethod ------ */
  MiddleMotor_Left()()
    |  |
    sel
      MiddleMotor?Off();
      MiddleMotor_Off()()
    or
      [(BlockLeft=true)]skip;
      EnvironmentMiddleMotorBlockFellOff := true;
      BlockLeft := false;
      MiddleMotor_Left()()
    or
      MiddleMotor?Left();
      MiddleMotor_Left()()
    or
      MiddleMotor?Right();
      MiddleMotor_Right()()
    or
      [(BlockRight=true)]skip;
      MiddleSensor!Block();
      MiddleSensor!BlockPassed();
      BlockRight := false;
      MiddleMotor_Left()()
    les
  .
/* ------ ProcessMethod ------ */
  LeftMotor_Off()()
    |  |
    sel
      LeftMotor?On();
      BlockLeft := true;
      LeftMotor_Running()()
    or
      LeftMotor?Off();
      LeftMotor_Off()()
    les
  .
/* ------ ProcessMethod ------ */
  LeftMotor_Running()()
    |  |
    sel
      LeftMotor?Off();
      LeftMotor_Off()()
    or
      LeftSensor!Block();
      LeftSensor!BlockPassed();
      LeftMotor_Running()()
    or
      LeftMotor?On();
      LeftMotor_Running()()
    les
  .
/* ------ ProcessMethod ------ */
  Environment_initial()()
    |  |
    BlockLeft := false;
    BlockRight := false;
    EnvironmentMiddleMotorBlockFellOff := false;
    par
      RightMotor_Start()()
    and
      MiddleMotor_Off()()
    and
      LeftMotor_Start()()
    rap
  .

/*==============*/
/*--------------*/
/* ProcessClass */
/*--------------*/
/*==============*/

process class R_L()
instance variables

communication channels
  Right_Middle,
  Right_Sensor,
  Right_Motor,
  Left_Middle,
  Left_Sensor,
  Left_Motor
message interface
  Right_Motor!On();
  Right_Motor!On();
  Right_Motor!Off();
  Right_Middle!Block();
  Left_Motor!On();
  Left_Motor!On();
  Left_Sensor?Block();
  Left_Middle!Block();
  Right_Sensor?Block();
  Right_Sensor?BlockPassed();
  Left_Sensor?BlockPassed();
  Left_Motor!Off()
initial method call
  R_L_initial()()
instance methods
/* ------ ProcessMethod ------ */
  Right_Single_Start()()
    |  |
    Right_Motor!On();
    Right_Single_Running()()
  .
/* ------ ProcessMethod ------ */
  Left_Single_Start()()
    |  |
    Left_Motor!On();
    Left_Single_Running()()
  .
/* ------ ProcessMethod ------ */
  Right_Single_Running()()
    |  |
    Right_Sensor?Block();
    Right_Sensor?BlockPassed();
    Right_Motor!Off();
    Right_Middle!Block();
    Right_Motor!On();
    Right_Single_Running()()
  .
/* ------ ProcessMethod ------ */
  Left_Single_Running()()
    |  |
    Left_Sensor?Block();
    Left_Sensor?BlockPassed();
    Left_Motor!Off();
    Left_Middle!Block();
    Left_Motor!On();
    Left_Single_Running()()
  .
/* ------ ProcessMethod ------ */
  R_L_initial()()
    |  |
    par
      Right_Single_Start()()
    and
      Left_Single_Start()()
    rap
  .

