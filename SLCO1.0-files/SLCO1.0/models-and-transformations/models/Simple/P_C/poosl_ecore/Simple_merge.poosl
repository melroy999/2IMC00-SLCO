<?xml version="1.0" encoding="ASCII"?>
<poosl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:poosl="poosl" name="Simple_merge">
  <classes xsi:type="poosl:ProcessClass" name="P_C">
    <variables name="Producer_To_Consumer_abl" type="//@primitiveTypes.0"/>
    <variables name="Producer_To_Consumer_name" type="//@primitiveTypes.1"/>
    <methods name="P_Producer_State">
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.1">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant string="Bericht"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="1" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.2"/>
    </methods>
    <methods name="C_Consumer_State">
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="and">
          <objectExpressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
            <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.0"/>
            <parameterExpressionLists>
              <expressions xsi:type="poosl:ConstantExpression">
                <constant integer="1" type="integer"/>
              </expressions>
            </parameterExpressionLists>
          </objectExpressions>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.1"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant string="Bericht"/>
                </expressions>
              </parameterExpressionLists>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="2" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.3"/>
    </methods>
    <methods name="P_Producer_State_s_Bericht_abl_StateToState">
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.0"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="3" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.0"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.0"/>
    </methods>
    <methods name="C_Consumer_State_r_Bericht_rbl_StateToState">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="3" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.1"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.1"/>
        </statementLists>
      </body>
    </methods>
    <methods name="P_C_initial">
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ParallelComposition">
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.0"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.1"/>
        </statementLists>
      </body>
    </methods>
    <initialMethodCall method="//@classes.0/@methods.4"/>
  </classes>
  <processInstances name="P_C" class="//@classes.0"/>
  <primitiveTypes primitiveTypeEnum="integer"/>
  <primitiveTypes/>
</poosl:Model>
