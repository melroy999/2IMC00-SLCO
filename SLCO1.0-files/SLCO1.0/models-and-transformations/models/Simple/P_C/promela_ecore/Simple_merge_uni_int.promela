<?xml version="1.0" encoding="ISO-8859-1"?>
<promela:spec xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:promela="promela" name="Simple_merge_uni_int">
  <one_decls visible="SHOW" typename="//@primitivetypes.3">
    <ivars name="P_C_Producer_To_Consumer_abl">
      <any_expr_or_ch_init xsi:type="promela:num_const"/>
    </ivars>
  </one_decls>
  <one_decls visible="SHOW" typename="//@primitivetypes.3">
    <ivars name="P_C_Producer_To_Consumer_name"/>
  </one_decls>
  <proctypes active="1" name="P_C_P_Producer">
    <sequence xsi:type="promela:block_stmnt" label="Label_State">
      <sequence xsi:type="promela:if_stmnt">
        <options>
          <sequence xsi:type="promela:block_stmnt">
            <sequence xsi:type="promela:assign_std">
              <varref var_name="P_C_Producer_To_Consumer_name"/>
              <any_expr xsi:type="promela:num_const"/>
            </sequence>
            <sequence xsi:type="promela:assign_std">
              <varref var_name="P_C_Producer_To_Consumer_abl"/>
              <any_expr xsi:type="promela:num_const" number="1"/>
            </sequence>
            <sequence xsi:type="promela:goto_stmnt" stmnt="//@proctypes.0/@sequence.1"/>
          </sequence>
        </options>
      </sequence>
    </sequence>
    <sequence xsi:type="promela:block_stmnt" label="Label_State_s_Bericht_abl_StateToState">
      <sequence xsi:type="promela:if_stmnt">
        <options>
          <sequence xsi:type="promela:block_stmnt">
            <sequence xsi:type="promela:bin_expr" operator="EQUALS">
              <operand1 xsi:type="promela:varref" var_name="P_C_Producer_To_Consumer_abl"/>
              <operand2 xsi:type="promela:num_const" number="2"/>
            </sequence>
            <sequence xsi:type="promela:assign_std">
              <varref var_name="P_C_Producer_To_Consumer_abl"/>
              <any_expr xsi:type="promela:num_const" number="3"/>
            </sequence>
            <sequence xsi:type="promela:bin_expr" operator="EQUALS">
              <operand1 xsi:type="promela:varref" var_name="P_C_Producer_To_Consumer_abl"/>
              <operand2 xsi:type="promela:num_const"/>
            </sequence>
            <sequence xsi:type="promela:goto_stmnt" stmnt="//@proctypes.0/@sequence.0"/>
          </sequence>
        </options>
      </sequence>
    </sequence>
  </proctypes>
  <proctypes active="1" name="P_C_C_Consumer">
    <sequence xsi:type="promela:block_stmnt" label="Label_State">
      <sequence xsi:type="promela:if_stmnt">
        <options>
          <sequence xsi:type="promela:block_stmnt">
            <sequence xsi:type="promela:bin_expr" operator="AND">
              <operand1 xsi:type="promela:bin_expr" operator="EQUALS">
                <operand1 xsi:type="promela:varref" var_name="P_C_Producer_To_Consumer_abl"/>
                <operand2 xsi:type="promela:num_const" number="1"/>
              </operand1>
              <operand2 xsi:type="promela:bin_expr" operator="EQUALS">
                <operand1 xsi:type="promela:varref" var_name="P_C_Producer_To_Consumer_name"/>
                <operand2 xsi:type="promela:num_const"/>
              </operand2>
            </sequence>
            <sequence xsi:type="promela:assign_std">
              <varref var_name="P_C_Producer_To_Consumer_abl"/>
              <any_expr xsi:type="promela:num_const" number="2"/>
            </sequence>
            <sequence xsi:type="promela:goto_stmnt" stmnt="//@proctypes.1/@sequence.1"/>
          </sequence>
        </options>
      </sequence>
    </sequence>
    <sequence xsi:type="promela:block_stmnt" label="Label_State_r_Bericht_rbl_StateToState">
      <sequence xsi:type="promela:if_stmnt">
        <options>
          <sequence xsi:type="promela:block_stmnt">
            <sequence xsi:type="promela:bin_expr" operator="EQUALS">
              <operand1 xsi:type="promela:varref" var_name="P_C_Producer_To_Consumer_abl"/>
              <operand2 xsi:type="promela:num_const" number="3"/>
            </sequence>
            <sequence xsi:type="promela:assign_std">
              <varref var_name="P_C_Producer_To_Consumer_abl"/>
              <any_expr xsi:type="promela:num_const"/>
            </sequence>
            <sequence xsi:type="promela:goto_stmnt" stmnt="//@proctypes.1/@sequence.0"/>
          </sequence>
          <sequence xsi:type="promela:block_stmnt">
            <sequence xsi:type="promela:bin_expr" operator="EQUALS">
              <operand1 xsi:type="promela:varref" var_name="P_C_Producer_To_Consumer_abl"/>
              <operand2 xsi:type="promela:num_const"/>
            </sequence>
            <sequence xsi:type="promela:goto_stmnt" stmnt="//@proctypes.1/@sequence.0"/>
          </sequence>
        </options>
      </sequence>
    </sequence>
  </proctypes>
  <primitivetypes primitivetype="CHAN"/>
  <primitivetypes primitivetype="BYTE"/>
  <primitivetypes primitivetype="MTYPE"/>
  <primitivetypes primitivetype="INT"/>
  <primitivetypes primitivetype="BOOL"/>
</promela:spec>
