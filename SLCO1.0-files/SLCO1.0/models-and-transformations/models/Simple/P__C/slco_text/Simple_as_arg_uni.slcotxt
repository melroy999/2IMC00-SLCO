model Simple_as_arg_uni {
  classes
    Producer_as {
      ports
        C_in
        C_out

      state machines
        Producer {
          initial
            State

          transitions
            StateToState from State to State {
              send Signal("Send_Bericht") to C_out;
              receive Signal([["Acknowledge_Bericht"]]) from C_in
            }
        }
    }

    Consumer_as {
      ports
        P_in
        P_out

      state machines
        Consumer {
          initial
            State

          transitions
            StateToState from State to State {
              receive Signal([["Send_Bericht"]]) from P_in;
              send Signal("Acknowledge_Bericht") to P_out
            }
        }
    }

  objects
    P_as: Producer_as
    C_as: Consumer_as

  channels
    Producer_To_Consumer_as_1_to_2(String) async lossless from P_as.C_out to C_as.P_in
    Producer_To_Consumer_as_2_to_1(String) async lossless from C_as.P_out to P_as.C_in
}