<?xml version="1.0" encoding="ASCII"?>
<poosl:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:poosl="poosl" name="Simple_as_arg_uni_ll_time_merge_int">
  <classes xsi:type="poosl:ProcessClass" name="C_C_C_C_C">
    <variables name="C_as_P_out_Original_to_Sender_abl" type="//@primitiveTypes.0"/>
    <variables name="C_as_P_out_Original_to_Sender_name" type="//@primitiveTypes.0"/>
    <variables name="C_as_P_out_Original_to_Sender_arg_0" type="//@primitiveTypes.0"/>
    <variables name="C_as_P_in_Receiver_to_Original_abl" type="//@primitiveTypes.0"/>
    <variables name="C_as_P_in_Receiver_to_Original_name" type="//@primitiveTypes.0"/>
    <variables name="C_as_P_in_Receiver_to_Original_arg_0" type="//@primitiveTypes.0"/>
    <variables name="C_as_P_in_Receiver_to_AS_abl" type="//@primitiveTypes.0"/>
    <variables name="C_as_P_in_Receiver_to_AS_name" type="//@primitiveTypes.0"/>
    <variables name="C_as_P_out_AR_to_Sender_abl" type="//@primitiveTypes.0"/>
    <variables name="C_as_P_out_AR_to_Sender_name" type="//@primitiveTypes.0"/>
    <variables name="C_C_C_C_CC_as_P_inABP_Receiver_Receiverr" type="//@primitiveTypes.0"/>
    <variables name="C_C_C_C_CC_as_P_inABP_Receiver_Receiverd" type="//@primitiveTypes.0"/>
    <variables name="C_C_C_C_CC_as_P_inABP_AS_ASb" type="//@primitiveTypes.0"/>
    <variables name="C_C_C_C_CC_as_P_outABP_Sender_Senders" type="//@primitiveTypes.0"/>
    <variables name="C_C_C_C_CC_as_P_outABP_Sender_Senderd" type="//@primitiveTypes.0"/>
    <variables name="C_C_C_C_CC_as_P_outABP_AR_ARb" type="//@primitiveTypes.0"/>
    <methods name="C_as_Consumer_State">
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="and">
          <objectExpressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="and">
            <objectExpressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.3"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="1" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </objectExpressions>
            <parameterExpressionLists>
              <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
                <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.4"/>
                <parameterExpressionLists>
                  <expressions xsi:type="poosl:ConstantExpression">
                    <constant integer="1" type="integer"/>
                  </expressions>
                </parameterExpressionLists>
              </expressions>
            </parameterExpressionLists>
          </objectExpressions>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.5"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="3" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.3">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="2" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.5"/>
    </methods>
    <methods name="C_as_P_inABP_Receiver_Receiver_Zero">
      <variables name="var_41" type="//@primitiveTypes.0"/>
      <variables name="var_14" type="//@primitiveTypes.0"/>
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.0" variables="//@classes.0/@variables.11 //@classes.0/@methods.1/@variables.0">
            <message name="Message"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@methods.1/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.10"/>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.4">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="1" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.5">
            <rightHandSide xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.11"/>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.3">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="1" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.7"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.0" variables="//@classes.0/@variables.11 //@classes.0/@methods.1/@variables.1">
            <message name="Message"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@methods.1/@variables.1"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
                  <objectExpressions xsi:type="poosl:ConstantExpression">
                    <constant integer="1" type="integer"/>
                  </objectExpressions>
                  <parameterExpressionLists>
                    <expressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.10"/>
                  </parameterExpressionLists>
                </expressions>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.1"/>
        </statementLists>
      </body>
    </methods>
    <methods name="C_as_P_inABP_AS_AS_Zero">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:TimeSynchronisation">
            <duration xsi:type="poosl:ConstantExpression">
              <constant integer="900" type="integer"/>
            </duration>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.0/@ports.1">
            <message name="Acknowledge"/>
            <expressionLists>
              <expressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.12"/>
            </expressionLists>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.2"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="and">
              <objectExpressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
                <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.6"/>
                <parameterExpressionLists>
                  <expressions xsi:type="poosl:ConstantExpression">
                    <constant integer="1" type="integer"/>
                  </expressions>
                </parameterExpressionLists>
              </objectExpressions>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
                  <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.7"/>
                  <parameterExpressionLists>
                    <expressions xsi:type="poosl:ConstantExpression">
                      <constant integer="2" type="integer"/>
                    </expressions>
                  </parameterExpressionLists>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.6">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.9"/>
        </statementLists>
      </body>
    </methods>
    <methods name="C_as_P_outABP_Sender_Sender_Zero">
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="and">
          <objectExpressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
            <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.0"/>
            <parameterExpressionLists>
              <expressions xsi:type="poosl:ConstantExpression">
                <constant integer="1" type="integer"/>
              </expressions>
            </parameterExpressionLists>
          </objectExpressions>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.1"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="1" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="2" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.11"/>
    </methods>
    <methods name="C_as_P_outABP_AR_AR_Zero">
      <variables name="var_27" type="//@primitiveTypes.0"/>
      <variables name="var_13" type="//@primitiveTypes.0"/>
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.3" variables="//@classes.0/@methods.4/@variables.0">
            <message name="Acknowledge"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@methods.4/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.15"/>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.9">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.8">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="1" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.13"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.0/@ports.3" variables="//@classes.0/@methods.4/@variables.1">
            <message name="Acknowledge"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@methods.4/@variables.1"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
                  <objectExpressions xsi:type="poosl:ConstantExpression">
                    <constant integer="1" type="integer"/>
                  </objectExpressions>
                  <parameterExpressionLists>
                    <expressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.15"/>
                  </parameterExpressionLists>
                </expressions>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.4"/>
        </statementLists>
      </body>
    </methods>
    <methods name="C_as_Consumer_State_r_Signal_rbl_StateToState">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.3"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="3" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.3">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.1">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="1" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.2">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="1" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.6"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.3"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.0"/>
        </statementLists>
      </body>
    </methods>
    <methods name="C_as_Consumer_State_r_Signal_rbl_StateToState_s_Signal_abl_State_r_Signal_rbl_StateToState_to_State">
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.0"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="3" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.0"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.0"/>
    </methods>
    <methods name="C_as_P_inABP_Receiver_Receiver_Zero_s_Signal_abl_ZeroToZeroAck">
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.3"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.3">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="3" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.3"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.7">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="2" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.6">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="1" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.8"/>
    </methods>
    <methods name="C_as_P_inABP_Receiver_Receiver_Zero_s_Signal_abl_ZeroToZeroAck_s_Acknowledge_abl_Zero_s_Signal_abl_ZeroToZeroAck_to_Zero">
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.6"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.6">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="3" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.6"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.10">
        <rightHandSide xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
          <objectExpressions xsi:type="poosl:ConstantExpression">
            <constant integer="1" type="integer"/>
          </objectExpressions>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.10"/>
          </parameterExpressionLists>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.1"/>
    </methods>
    <methods name="C_as_P_inABP_AS_AS_Zero_r_Acknowledge_rbl_ZeroToZeroAck">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.6"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="3" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.6">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.12">
            <rightHandSide xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
              <objectExpressions xsi:type="poosl:ConstantExpression">
                <constant integer="1" type="integer"/>
              </objectExpressions>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.12"/>
              </parameterExpressionLists>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.2"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.6"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.2"/>
        </statementLists>
      </body>
    </methods>
    <methods name="C_as_P_outABP_Sender_Sender_One">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:TimeSynchronisation">
            <duration xsi:type="poosl:ConstantExpression">
              <constant integer="900" type="integer"/>
            </duration>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.0/@ports.2">
            <message name="Message"/>
            <expressionLists>
              <expressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.14"/>
            </expressionLists>
            <expressionLists>
              <expressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.13"/>
            </expressionLists>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.10"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="and">
              <objectExpressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
                <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.8"/>
                <parameterExpressionLists>
                  <expressions xsi:type="poosl:ConstantExpression">
                    <constant integer="1" type="integer"/>
                  </expressions>
                </parameterExpressionLists>
              </objectExpressions>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
                  <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.9"/>
                  <parameterExpressionLists>
                    <expressions xsi:type="poosl:ConstantExpression">
                      <constant integer="2" type="integer"/>
                    </expressions>
                  </parameterExpressionLists>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.8">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.12"/>
        </statementLists>
      </body>
    </methods>
    <methods name="C_as_P_outABP_Sender_Sender_Zero_r_Signal_rbl_ZeroToOne">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="3" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.14">
            <rightHandSide xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.2"/>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.10"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.3"/>
        </statementLists>
      </body>
    </methods>
    <methods name="C_as_P_outABP_Sender_Sender_One_r_Acknowledge_rbl_OneToZero">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.8"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="3" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.8">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.13">
            <rightHandSide xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
              <objectExpressions xsi:type="poosl:ConstantExpression">
                <constant integer="1" type="integer"/>
              </objectExpressions>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.13"/>
              </parameterExpressionLists>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.3"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.8"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.10"/>
        </statementLists>
      </body>
    </methods>
    <methods name="C_as_P_outABP_AR_AR_Zero_s_Acknowledge_abl_ZeroToZeroAck">
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.8"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.8">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="3" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.8"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.15">
        <rightHandSide xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
          <objectExpressions xsi:type="poosl:ConstantExpression">
            <constant integer="1" type="integer"/>
          </objectExpressions>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:VariableExpression" variable="//@classes.0/@variables.15"/>
          </parameterExpressionLists>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.4"/>
    </methods>
    <methods name="C_C_C_C_C_initial">
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.3">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.6">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.8">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.10">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.12">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="1" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.13">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.0/@variables.15">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ParallelComposition">
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.0"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.1"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.2"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.3"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.0/@methods.4"/>
        </statementLists>
      </body>
    </methods>
    <ports name="C_as_P_inABP_Receiver_ARSender"/>
    <ports name="C_as_P_inABP_AS_AASAR"/>
    <ports name="C_as_P_outABP_Sender_ASReceiver"/>
    <ports name="C_as_P_outABP_AR_AARAS"/>
    <initialMethodCall method="//@classes.0/@methods.14"/>
  </classes>
  <classes xsi:type="poosl:ProcessClass" name="P_P_P_P_P">
    <variables name="P_as_C_out_Original_to_Sender_abl" type="//@primitiveTypes.0"/>
    <variables name="P_as_C_out_Original_to_Sender_name" type="//@primitiveTypes.0"/>
    <variables name="P_as_C_out_Original_to_Sender_arg_0" type="//@primitiveTypes.0"/>
    <variables name="P_as_C_out_AR_to_Sender_abl" type="//@primitiveTypes.0"/>
    <variables name="P_as_C_out_AR_to_Sender_name" type="//@primitiveTypes.0"/>
    <variables name="P_as_C_in_Receiver_to_Original_abl" type="//@primitiveTypes.0"/>
    <variables name="P_as_C_in_Receiver_to_Original_name" type="//@primitiveTypes.0"/>
    <variables name="P_as_C_in_Receiver_to_Original_arg_0" type="//@primitiveTypes.0"/>
    <variables name="P_as_C_in_Receiver_to_AS_abl" type="//@primitiveTypes.0"/>
    <variables name="P_as_C_in_Receiver_to_AS_name" type="//@primitiveTypes.0"/>
    <variables name="P_P_P_P_PP_as_C_outABP_Sender_Senders" type="//@primitiveTypes.0"/>
    <variables name="P_P_P_P_PP_as_C_outABP_Sender_Senderd" type="//@primitiveTypes.0"/>
    <variables name="P_P_P_P_PP_as_C_outABP_AR_ARb" type="//@primitiveTypes.0"/>
    <variables name="P_P_P_P_PP_as_C_inABP_Receiver_Receiverr" type="//@primitiveTypes.0"/>
    <variables name="P_P_P_P_PP_as_C_inABP_Receiver_Receiverd" type="//@primitiveTypes.0"/>
    <variables name="P_P_P_P_PP_as_C_inABP_AS_ASb" type="//@primitiveTypes.0"/>
    <methods name="P_as_Producer_State">
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.1">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="1" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.2">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="3" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="1" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.5"/>
    </methods>
    <methods name="P_as_C_outABP_Sender_Sender_Zero">
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="and">
          <objectExpressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
            <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.0"/>
            <parameterExpressionLists>
              <expressions xsi:type="poosl:ConstantExpression">
                <constant integer="1" type="integer"/>
              </expressions>
            </parameterExpressionLists>
          </objectExpressions>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.1"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="1" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="2" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.8"/>
    </methods>
    <methods name="P_as_C_outABP_AR_AR_Zero">
      <variables name="var_15" type="//@primitiveTypes.0"/>
      <variables name="var_21" type="//@primitiveTypes.0"/>
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.1/@ports.1" variables="//@classes.1/@methods.2/@variables.0">
            <message name="Acknowledge"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@methods.2/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.12"/>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.4">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.3">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="1" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.10"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.1/@ports.1" variables="//@classes.1/@methods.2/@variables.1">
            <message name="Acknowledge"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@methods.2/@variables.1"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
                  <objectExpressions xsi:type="poosl:ConstantExpression">
                    <constant integer="1" type="integer"/>
                  </objectExpressions>
                  <parameterExpressionLists>
                    <expressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.12"/>
                  </parameterExpressionLists>
                </expressions>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.2"/>
        </statementLists>
      </body>
    </methods>
    <methods name="P_as_C_inABP_Receiver_Receiver_Zero">
      <variables name="var_28" type="//@primitiveTypes.0"/>
      <variables name="var_14" type="//@primitiveTypes.0"/>
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.1/@ports.2" variables="//@classes.1/@variables.14 //@classes.1/@methods.3/@variables.0">
            <message name="Message"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@methods.3/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.13"/>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.6">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="1" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.7">
            <rightHandSide xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.14"/>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.5">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="1" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.11"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:MessageReceive" port="//@classes.1/@ports.2" variables="//@classes.1/@variables.14 //@classes.1/@methods.3/@variables.1">
            <message name="Message"/>
            <condition xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@methods.3/@variables.1"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
                  <objectExpressions xsi:type="poosl:ConstantExpression">
                    <constant integer="1" type="integer"/>
                  </objectExpressions>
                  <parameterExpressionLists>
                    <expressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.13"/>
                  </parameterExpressionLists>
                </expressions>
              </parameterExpressionLists>
            </condition>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.3"/>
        </statementLists>
      </body>
    </methods>
    <methods name="P_as_C_inABP_AS_AS_Zero">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:TimeSynchronisation">
            <duration xsi:type="poosl:ConstantExpression">
              <constant integer="900" type="integer"/>
            </duration>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.1/@ports.3">
            <message name="Acknowledge"/>
            <expressionLists>
              <expressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.15"/>
            </expressionLists>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.4"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="and">
              <objectExpressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
                <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.8"/>
                <parameterExpressionLists>
                  <expressions xsi:type="poosl:ConstantExpression">
                    <constant integer="1" type="integer"/>
                  </expressions>
                </parameterExpressionLists>
              </objectExpressions>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
                  <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.9"/>
                  <parameterExpressionLists>
                    <expressions xsi:type="poosl:ConstantExpression">
                      <constant integer="2" type="integer"/>
                    </expressions>
                  </parameterExpressionLists>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.8">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.13"/>
        </statementLists>
      </body>
    </methods>
    <methods name="P_as_Producer_State_s_Signal_abl_StateToState">
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="and">
          <objectExpressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="and">
            <objectExpressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.5"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="1" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </objectExpressions>
            <parameterExpressionLists>
              <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
                <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.6"/>
                <parameterExpressionLists>
                  <expressions xsi:type="poosl:ConstantExpression">
                    <constant integer="1" type="integer"/>
                  </expressions>
                </parameterExpressionLists>
              </expressions>
            </parameterExpressionLists>
          </objectExpressions>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.7"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.5">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="2" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.6"/>
    </methods>
    <methods name="P_as_Producer_State_s_Signal_abl_StateToState_r_Signal_rbl_State_s_Signal_abl_StateToState_to_State">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.5"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="3" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.5">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="2" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.0">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="3" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.0"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.5"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.5"/>
        </statementLists>
      </body>
    </methods>
    <methods name="P_as_C_outABP_Sender_Sender_One">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:TimeSynchronisation">
            <duration xsi:type="poosl:ConstantExpression">
              <constant integer="900" type="integer"/>
            </duration>
          </statements>
          <statements xsi:type="poosl:MessageSend" port="//@classes.1/@ports.0">
            <message name="Message"/>
            <expressionLists>
              <expressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.11"/>
            </expressionLists>
            <expressionLists>
              <expressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.10"/>
            </expressionLists>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.7"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="and">
              <objectExpressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
                <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.3"/>
                <parameterExpressionLists>
                  <expressions xsi:type="poosl:ConstantExpression">
                    <constant integer="1" type="integer"/>
                  </expressions>
                </parameterExpressionLists>
              </objectExpressions>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
                  <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.4"/>
                  <parameterExpressionLists>
                    <expressions xsi:type="poosl:ConstantExpression">
                      <constant integer="2" type="integer"/>
                    </expressions>
                  </parameterExpressionLists>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.3">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.9"/>
        </statementLists>
      </body>
    </methods>
    <methods name="P_as_C_outABP_Sender_Sender_Zero_r_Signal_rbl_ZeroToOne">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="3" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.11">
            <rightHandSide xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.2"/>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.0">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.7"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.0"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.1"/>
        </statementLists>
      </body>
    </methods>
    <methods name="P_as_C_outABP_Sender_Sender_One_r_Acknowledge_rbl_OneToZero">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.3"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="3" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.3">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.10">
            <rightHandSide xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
              <objectExpressions xsi:type="poosl:ConstantExpression">
                <constant integer="1" type="integer"/>
              </objectExpressions>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.10"/>
              </parameterExpressionLists>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.1"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.3"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.7"/>
        </statementLists>
      </body>
    </methods>
    <methods name="P_as_C_outABP_AR_AR_Zero_s_Acknowledge_abl_ZeroToZeroAck">
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.3"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.3">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="3" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.3"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.12">
        <rightHandSide xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
          <objectExpressions xsi:type="poosl:ConstantExpression">
            <constant integer="1" type="integer"/>
          </objectExpressions>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.12"/>
          </parameterExpressionLists>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.2"/>
    </methods>
    <methods name="P_as_C_inABP_Receiver_Receiver_Zero_s_Signal_abl_ZeroToZeroAck">
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.5"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.5">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="3" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.5"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.9">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="2" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.8">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="1" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.12"/>
    </methods>
    <methods name="P_as_C_inABP_Receiver_Receiver_Zero_s_Signal_abl_ZeroToZeroAck_s_Acknowledge_abl_Zero_s_Signal_abl_ZeroToZeroAck_to_Zero">
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.8"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant integer="2" type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.8">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="3" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:GuardedExecution">
        <statement xsi:type="poosl:Skip"/>
        <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
          <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.8"/>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </expressions>
          </parameterExpressionLists>
        </guard>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.13">
        <rightHandSide xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
          <objectExpressions xsi:type="poosl:ConstantExpression">
            <constant integer="1" type="integer"/>
          </objectExpressions>
          <parameterExpressionLists>
            <expressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.13"/>
          </parameterExpressionLists>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.3"/>
    </methods>
    <methods name="P_as_C_inABP_AS_AS_Zero_r_Acknowledge_rbl_ZeroToZeroAck">
      <body xsi:type="poosl:Selection">
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.8"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant integer="3" type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.8">
            <rightHandSide xsi:type="poosl:ConstantExpression">
              <constant type="integer"/>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.15">
            <rightHandSide xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="subtract">
              <objectExpressions xsi:type="poosl:ConstantExpression">
                <constant integer="1" type="integer"/>
              </objectExpressions>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.15"/>
              </parameterExpressionLists>
            </rightHandSide>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.4"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:GuardedExecution">
            <statement xsi:type="poosl:Skip"/>
            <guard xsi:type="poosl:PrimitiveDataMethodCall" primitiveDataMethod="equals">
              <objectExpressions xsi:type="poosl:VariableExpression" variable="//@classes.1/@variables.8"/>
              <parameterExpressionLists>
                <expressions xsi:type="poosl:ConstantExpression">
                  <constant type="integer"/>
                </expressions>
              </parameterExpressionLists>
            </guard>
          </statements>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.4"/>
        </statementLists>
      </body>
    </methods>
    <methods name="P_P_P_P_P_initial">
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.0">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.3">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.5">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.8">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.10">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.12">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.13">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:Assignment" leftHandSide="//@classes.1/@variables.15">
        <rightHandSide xsi:type="poosl:ConstantExpression">
          <constant integer="1" type="integer"/>
        </rightHandSide>
      </body>
      <body xsi:type="poosl:ParallelComposition">
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.0"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.1"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.2"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.3"/>
        </statementLists>
        <statementLists>
          <statements xsi:type="poosl:ProcessMethodCall" method="//@classes.1/@methods.4"/>
        </statementLists>
      </body>
    </methods>
    <ports name="P_as_C_outABP_Sender_ASReceiver"/>
    <ports name="P_as_C_outABP_AR_AARAS"/>
    <ports name="P_as_C_inABP_Receiver_ARSender"/>
    <ports name="P_as_C_inABP_AS_AASAR"/>
    <initialMethodCall method="//@classes.1/@methods.14"/>
  </classes>
  <processInstances name="C_C_C_C_C" class="//@classes.0"/>
  <processInstances name="P_P_P_P_P" class="//@classes.1"/>
  <channels name="P_as_C_out_Sender_to_Receiver" port1="//@classes.1/@ports.0" port2="//@classes.0/@ports.0" processInstance1="//@processInstances.1" processInstance2="//@processInstances.0"/>
  <channels name="P_as_C_out_AS_to_AR" port1="//@classes.0/@ports.1" port2="//@classes.1/@ports.1" processInstance1="//@processInstances.0" processInstance2="//@processInstances.1"/>
  <channels name="C_as_P_out_Sender_to_Receiver" port1="//@classes.0/@ports.2" port2="//@classes.1/@ports.2" processInstance1="//@processInstances.0" processInstance2="//@processInstances.1"/>
  <channels name="C_as_P_out_AS_to_AR" port1="//@classes.1/@ports.3" port2="//@classes.0/@ports.3" processInstance1="//@processInstances.1" processInstance2="//@processInstances.0"/>
  <primitiveTypes primitiveTypeEnum="integer"/>
</poosl:Model>
