/*
* generated by Xtext
*/
grammar InternalTextualSlco;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.TextualSlcoGrammarAccess;

}

@parser::members {
 
 	private TextualSlcoGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TextualSlcoGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group__0)
{ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStateMachine
entryRuleStateMachine 
:
{ before(grammarAccess.getStateMachineRule()); }
	 ruleStateMachine
{ after(grammarAccess.getStateMachineRule()); } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateMachineAccess().getGroup()); }
(rule__StateMachine__Group__0)
{ after(grammarAccess.getStateMachineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleInitial
entryRuleInitial 
:
{ before(grammarAccess.getInitialRule()); }
	 ruleInitial
{ after(grammarAccess.getInitialRule()); } 
	 EOF 
;

// Rule Initial
ruleInitial
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitialAccess().getNameAssignment()); }
(rule__Initial__NameAssignment)
{ after(grammarAccess.getInitialAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getNameAssignment()); }
(rule__State__NameAssignment)
{ after(grammarAccess.getStateAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFinal
entryRuleFinal 
:
{ before(grammarAccess.getFinalRule()); }
	 ruleFinal
{ after(grammarAccess.getFinalRule()); } 
	 EOF 
;

// Rule Final
ruleFinal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFinalAccess().getNameAssignment()); }
(rule__Final__NameAssignment)
{ after(grammarAccess.getFinalAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVertexReference
entryRuleVertexReference 
:
{ before(grammarAccess.getVertexReferenceRule()); }
	 ruleVertexReference
{ after(grammarAccess.getVertexReferenceRule()); } 
	 EOF 
;

// Rule VertexReference
ruleVertexReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVertexReferenceAccess().getNameAssignment()); }
(rule__VertexReference__NameAssignment)
{ after(grammarAccess.getVertexReferenceAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelay
entryRuleDelay 
:
{ before(grammarAccess.getDelayRule()); }
	 ruleDelay
{ after(grammarAccess.getDelayRule()); } 
	 EOF 
;

// Rule Delay
ruleDelay
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelayAccess().getGroup()); }
(rule__Delay__Group__0)
{ after(grammarAccess.getDelayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePortReference
entryRulePortReference 
:
{ before(grammarAccess.getPortReferenceRule()); }
	 rulePortReference
{ after(grammarAccess.getPortReferenceRule()); } 
	 EOF 
;

// Rule PortReference
rulePortReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPortReferenceAccess().getNameAssignment()); }
(rule__PortReference__NameAssignment)
{ after(grammarAccess.getPortReferenceAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalReception
entryRuleSignalReception 
:
{ before(grammarAccess.getSignalReceptionRule()); }
	 ruleSignalReception
{ after(grammarAccess.getSignalReceptionRule()); } 
	 EOF 
;

// Rule SignalReception
ruleSignalReception
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalReceptionAccess().getGroup()); }
(rule__SignalReception__Group__0)
{ after(grammarAccess.getSignalReceptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalArgument
entryRuleSignalArgument 
:
{ before(grammarAccess.getSignalArgumentRule()); }
	 ruleSignalArgument
{ after(grammarAccess.getSignalArgumentRule()); } 
	 EOF 
;

// Rule SignalArgument
ruleSignalArgument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalArgumentAccess().getAlternatives()); }
(rule__SignalArgument__Alternatives)
{ after(grammarAccess.getSignalArgumentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalArgumentVariable
entryRuleSignalArgumentVariable 
:
{ before(grammarAccess.getSignalArgumentVariableRule()); }
	 ruleSignalArgumentVariable
{ after(grammarAccess.getSignalArgumentVariableRule()); } 
	 EOF 
;

// Rule SignalArgumentVariable
ruleSignalArgumentVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalArgumentVariableAccess().getVariableAssignment()); }
(rule__SignalArgumentVariable__VariableAssignment)
{ after(grammarAccess.getSignalArgumentVariableAccess().getVariableAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalArgumentExpression
entryRuleSignalArgumentExpression 
:
{ before(grammarAccess.getSignalArgumentExpressionRule()); }
	 ruleSignalArgumentExpression
{ after(grammarAccess.getSignalArgumentExpressionRule()); } 
	 EOF 
;

// Rule SignalArgumentExpression
ruleSignalArgumentExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalArgumentExpressionAccess().getGroup()); }
(rule__SignalArgumentExpression__Group__0)
{ after(grammarAccess.getSignalArgumentExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSendSignal
entryRuleSendSignal 
:
{ before(grammarAccess.getSendSignalRule()); }
	 ruleSendSignal
{ after(grammarAccess.getSendSignalRule()); } 
	 EOF 
;

// Rule SendSignal
ruleSendSignal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSendSignalAccess().getGroup()); }
(rule__SendSignal__Group__0)
{ after(grammarAccess.getSendSignalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObject
entryRuleObject 
:
{ before(grammarAccess.getObjectRule()); }
	 ruleObject
{ after(grammarAccess.getObjectRule()); } 
	 EOF 
;

// Rule Object
ruleObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectAccess().getGroup()); }
(rule__Object__Group__0)
{ after(grammarAccess.getObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePort
entryRulePort 
:
{ before(grammarAccess.getPortRule()); }
	 rulePort
{ after(grammarAccess.getPortRule()); } 
	 EOF 
;

// Rule Port
rulePort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPortAccess().getNameAssignment()); }
(rule__Port__NameAssignment)
{ after(grammarAccess.getPortAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChannel
entryRuleChannel 
:
{ before(grammarAccess.getChannelRule()); }
	 ruleChannel
{ after(grammarAccess.getChannelRule()); } 
	 EOF 
;

// Rule Channel
ruleChannel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChannelAccess().getAlternatives()); }
(rule__Channel__Alternatives)
{ after(grammarAccess.getChannelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnidirectionalChannel
entryRuleUnidirectionalChannel 
:
{ before(grammarAccess.getUnidirectionalChannelRule()); }
	 ruleUnidirectionalChannel
{ after(grammarAccess.getUnidirectionalChannelRule()); } 
	 EOF 
;

// Rule UnidirectionalChannel
ruleUnidirectionalChannel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getGroup()); }
(rule__UnidirectionalChannel__Group__0)
{ after(grammarAccess.getUnidirectionalChannelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBidirectionalChannel
entryRuleBidirectionalChannel 
:
{ before(grammarAccess.getBidirectionalChannelRule()); }
	 ruleBidirectionalChannel
{ after(grammarAccess.getBidirectionalChannelRule()); } 
	 EOF 
;

// Rule BidirectionalChannel
ruleBidirectionalChannel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getGroup()); }
(rule__BidirectionalChannel__Group__0)
{ after(grammarAccess.getBidirectionalChannelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgumentType
entryRuleArgumentType 
:
{ before(grammarAccess.getArgumentTypeRule()); }
	 ruleArgumentType
{ after(grammarAccess.getArgumentTypeRule()); } 
	 EOF 
;

// Rule ArgumentType
ruleArgumentType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentTypeAccess().getTypeAssignment()); }
(rule__ArgumentType__TypeAssignment)
{ after(grammarAccess.getArgumentTypeAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanConstantExpression
entryRuleBooleanConstantExpression 
:
{ before(grammarAccess.getBooleanConstantExpressionRule()); }
	 ruleBooleanConstantExpression
{ after(grammarAccess.getBooleanConstantExpressionRule()); } 
	 EOF 
;

// Rule BooleanConstantExpression
ruleBooleanConstantExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanConstantExpressionAccess().getValueAssignment()); }
(rule__BooleanConstantExpression__ValueAssignment)
{ after(grammarAccess.getBooleanConstantExpressionAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerConstantExpression
entryRuleIntegerConstantExpression 
:
{ before(grammarAccess.getIntegerConstantExpressionRule()); }
	 ruleIntegerConstantExpression
{ after(grammarAccess.getIntegerConstantExpressionRule()); } 
	 EOF 
;

// Rule IntegerConstantExpression
ruleIntegerConstantExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerConstantExpressionAccess().getValueAssignment()); }
(rule__IntegerConstantExpression__ValueAssignment)
{ after(grammarAccess.getIntegerConstantExpressionAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringConstantExpression
entryRuleStringConstantExpression 
:
{ before(grammarAccess.getStringConstantExpressionRule()); }
	 ruleStringConstantExpression
{ after(grammarAccess.getStringConstantExpressionRule()); } 
	 EOF 
;

// Rule StringConstantExpression
ruleStringConstantExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringConstantExpressionAccess().getValueAssignment()); }
(rule__StringConstantExpression__ValueAssignment)
{ after(grammarAccess.getStringConstantExpressionAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableReference
entryRuleVariableReference 
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableReferenceAccess().getNameAssignment()); }
(rule__VariableReference__NameAssignment)
{ after(grammarAccess.getVariableReferenceAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableExpression
entryRuleVariableExpression 
:
{ before(grammarAccess.getVariableExpressionRule()); }
	 ruleVariableExpression
{ after(grammarAccess.getVariableExpressionRule()); } 
	 EOF 
;

// Rule VariableExpression
ruleVariableExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableExpressionAccess().getVariableAssignment()); }
(rule__VariableExpression__VariableAssignment)
{ after(grammarAccess.getVariableExpressionAccess().getVariableAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBracketExpression
entryRuleBracketExpression 
:
{ before(grammarAccess.getBracketExpressionRule()); }
	 ruleBracketExpression
{ after(grammarAccess.getBracketExpressionRule()); } 
	 EOF 
;

// Rule BracketExpression
ruleBracketExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBracketExpressionAccess().getGroup()); }
(rule__BracketExpression__Group__0)
{ after(grammarAccess.getBracketExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule PrimitiveType
rulePrimitiveType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
(rule__PrimitiveType__Alternatives)
{ after(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ChannelType
ruleChannelType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelTypeAccess().getAlternatives()); }
(rule__ChannelType__Alternatives)
{ after(grammarAccess.getChannelTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Operator
ruleOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
(rule__Operator__Alternatives)
{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_0()); }
	ruleAssignment
{ after(grammarAccess.getStatementAccess().getAssignmentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSendSignalParserRuleCall_1()); }
	ruleSendSignal
{ after(grammarAccess.getStatementAccess().getSendSignalParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDelayParserRuleCall_2()); }
	ruleDelay
{ after(grammarAccess.getStatementAccess().getDelayParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSignalReceptionParserRuleCall_3()); }
	ruleSignalReception
{ after(grammarAccess.getStatementAccess().getSignalReceptionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_4()); }
	ruleExpression
{ after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalArgument__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalArgumentAccess().getSignalArgumentVariableParserRuleCall_0()); }
	ruleSignalArgumentVariable
{ after(grammarAccess.getSignalArgumentAccess().getSignalArgumentVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSignalArgumentAccess().getSignalArgumentExpressionParserRuleCall_1()); }
	ruleSignalArgumentExpression
{ after(grammarAccess.getSignalArgumentAccess().getSignalArgumentExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelAccess().getUnidirectionalChannelParserRuleCall_0()); }
	ruleUnidirectionalChannel
{ after(grammarAccess.getChannelAccess().getUnidirectionalChannelParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getChannelAccess().getBidirectionalChannelParserRuleCall_1()); }
	ruleBidirectionalChannel
{ after(grammarAccess.getChannelAccess().getBidirectionalChannelParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBooleanConstantExpressionParserRuleCall_0()); }
	ruleBooleanConstantExpression
{ after(grammarAccess.getTerminalExpressionAccess().getBooleanConstantExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getIntegerConstantExpressionParserRuleCall_1()); }
	ruleIntegerConstantExpression
{ after(grammarAccess.getTerminalExpressionAccess().getIntegerConstantExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getStringConstantExpressionParserRuleCall_2()); }
	ruleStringConstantExpression
{ after(grammarAccess.getTerminalExpressionAccess().getStringConstantExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getVariableExpressionParserRuleCall_3()); }
	ruleVariableExpression
{ after(grammarAccess.getTerminalExpressionAccess().getVariableExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getBracketExpressionParserRuleCall_4()); }
	ruleBracketExpression
{ after(grammarAccess.getTerminalExpressionAccess().getBracketExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getIntegerEnumLiteralDeclaration_0()); }
(	'Integer' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getIntegerEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getStringEnumLiteralDeclaration_1()); }
(	'String' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getStringEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getBooleanEnumLiteralDeclaration_2()); }
(	'Boolean' 
)
{ after(grammarAccess.getPrimitiveTypeAccess().getBooleanEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelTypeAccess().getSynchronousEnumLiteralDeclaration_0()); }
(	'sync' 
)
{ after(grammarAccess.getChannelTypeAccess().getSynchronousEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getChannelTypeAccess().getAsynchronousLosslessEnumLiteralDeclaration_1()); }
(	'async lossless' 
)
{ after(grammarAccess.getChannelTypeAccess().getAsynchronousLosslessEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getChannelTypeAccess().getAsynchronousLossyEnumLiteralDeclaration_2()); }
(	'async lossy' 
)
{ after(grammarAccess.getChannelTypeAccess().getAsynchronousLossyEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getAtLeastEnumLiteralDeclaration_0()); }
(	'>=' 
)
{ after(grammarAccess.getOperatorAccess().getAtLeastEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getAtMostEnumLiteralDeclaration_1()); }
(	'<=' 
)
{ after(grammarAccess.getOperatorAccess().getAtMostEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getAddEnumLiteralDeclaration_2()); }
(	'+' 
)
{ after(grammarAccess.getOperatorAccess().getAddEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getAndEnumLiteralDeclaration_3()); }
(	'&&' 
)
{ after(grammarAccess.getOperatorAccess().getAndEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getOrEnumLiteralDeclaration_4()); }
(	'||' 
)
{ after(grammarAccess.getOperatorAccess().getOrEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getEqualsEnumLiteralDeclaration_5()); }
(	'==' 
)
{ after(grammarAccess.getOperatorAccess().getEqualsEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getDiffersEnumLiteralDeclaration_6()); }
(	'!=' 
)
{ after(grammarAccess.getOperatorAccess().getDiffersEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getSubtractEnumLiteralDeclaration_7()); }
(	'-' 
)
{ after(grammarAccess.getOperatorAccess().getSubtractEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }

	'model' 

{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
(rule__Model__NameAssignment_1)
{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_3()); }
(rule__Model__Group_3__0)?
{ after(grammarAccess.getModelAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_4()); }
(rule__Model__Group_4__0)?
{ after(grammarAccess.getModelAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__5__Impl
	rule__Model__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_5()); }
(rule__Model__Group_5__0)?
{ after(grammarAccess.getModelAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Model__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3__0__Impl
	rule__Model__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getClassesKeyword_3_0()); }

	'classes' 

{ after(grammarAccess.getModelAccess().getClassesKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getClassesAssignment_3_1()); }
(rule__Model__ClassesAssignment_3_1)*
{ after(grammarAccess.getModelAccess().getClassesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Model__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_4__0__Impl
	rule__Model__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getObjectsKeyword_4_0()); }

	'objects' 

{ after(grammarAccess.getModelAccess().getObjectsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getObjectsAssignment_4_1()); }
(rule__Model__ObjectsAssignment_4_1)*
{ after(grammarAccess.getModelAccess().getObjectsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Model__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_5__0__Impl
	rule__Model__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getChannelsKeyword_5_0()); }

	'channels' 

{ after(grammarAccess.getModelAccess().getChannelsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getChannelsAssignment_5_1()); }
(rule__Model__ChannelsAssignment_5_1)*
{ after(grammarAccess.getModelAccess().getChannelsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameAssignment_0()); }
(rule__Class__NameAssignment_0)
{ after(grammarAccess.getClassAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_2()); }
(rule__Class__Group_2__0)?
{ after(grammarAccess.getClassAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_3()); }
(rule__Class__Group_3__0)?
{ after(grammarAccess.getClassAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__4__Impl
	rule__Class__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_4()); }
(rule__Class__Group_4__0)?
{ after(grammarAccess.getClassAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Class__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_2__0__Impl
	rule__Class__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getVariablesKeyword_2_0()); }

	'variables' 

{ after(grammarAccess.getClassAccess().getVariablesKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getVariablesAssignment_2_1()); }
(rule__Class__VariablesAssignment_2_1)*
{ after(grammarAccess.getClassAccess().getVariablesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3__0__Impl
	rule__Class__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getPortsKeyword_3_0()); }

	'ports' 

{ after(grammarAccess.getClassAccess().getPortsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getPortsAssignment_3_1()); }
(rule__Class__PortsAssignment_3_1)*
{ after(grammarAccess.getClassAccess().getPortsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_4__0__Impl
	rule__Class__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getStateMachinesKeyword_4_0()); }

	'state machines' 

{ after(grammarAccess.getClassAccess().getStateMachinesKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getStateMachinesAssignment_4_1()); }
(rule__Class__StateMachinesAssignment_4_1)*
{ after(grammarAccess.getClassAccess().getStateMachinesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateMachine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__0__Impl
	rule__StateMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNameAssignment_0()); }
(rule__StateMachine__NameAssignment_0)
{ after(grammarAccess.getStateMachineAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__1__Impl
	rule__StateMachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__2__Impl
	rule__StateMachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_2()); }
(rule__StateMachine__Group_2__0)?
{ after(grammarAccess.getStateMachineAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__3__Impl
	rule__StateMachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_3()); }
(rule__StateMachine__Group_3__0)?
{ after(grammarAccess.getStateMachineAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__4__Impl
	rule__StateMachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_4()); }
(rule__StateMachine__Group_4__0)?
{ after(grammarAccess.getStateMachineAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__5__Impl
	rule__StateMachine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_5()); }
(rule__StateMachine__Group_5__0)?
{ after(grammarAccess.getStateMachineAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__6__Impl
	rule__StateMachine__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_6()); }
(rule__StateMachine__Group_6__0)?
{ after(grammarAccess.getStateMachineAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__StateMachine__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_2__0__Impl
	rule__StateMachine__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVariablesKeyword_2_0()); }

	'variables' 

{ after(grammarAccess.getStateMachineAccess().getVariablesKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVariablesAssignment_2_1()); }
(rule__StateMachine__VariablesAssignment_2_1)*
{ after(grammarAccess.getStateMachineAccess().getVariablesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateMachine__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_3__0__Impl
	rule__StateMachine__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getInitialKeyword_3_0()); }

	'initial' 

{ after(grammarAccess.getStateMachineAccess().getInitialKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVerticesAssignment_3_1()); }
(rule__StateMachine__VerticesAssignment_3_1)*
{ after(grammarAccess.getStateMachineAccess().getVerticesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateMachine__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_4__0__Impl
	rule__StateMachine__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStateKeyword_4_0()); }

	'state' 

{ after(grammarAccess.getStateMachineAccess().getStateKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVerticesAssignment_4_1()); }
(rule__StateMachine__VerticesAssignment_4_1)*
{ after(grammarAccess.getStateMachineAccess().getVerticesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateMachine__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_5__0__Impl
	rule__StateMachine__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getFinalKeyword_5_0()); }

	'final' 

{ after(grammarAccess.getStateMachineAccess().getFinalKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVerticesAssignment_5_1()); }
(rule__StateMachine__VerticesAssignment_5_1)*
{ after(grammarAccess.getStateMachineAccess().getVerticesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateMachine__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_6__0__Impl
	rule__StateMachine__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsKeyword_6_0()); }

	'transitions' 

{ after(grammarAccess.getStateMachineAccess().getTransitionsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsAssignment_6_1()); }
(rule__StateMachine__TransitionsAssignment_6_1)*
{ after(grammarAccess.getStateMachineAccess().getTransitionsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getNameAssignment_0()); }
(rule__Transition__NameAssignment_0)
{ after(grammarAccess.getTransitionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getFromKeyword_1()); }

	'from' 

{ after(grammarAccess.getTransitionAccess().getFromKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSourceAssignment_2()); }
(rule__Transition__SourceAssignment_2)
{ after(grammarAccess.getTransitionAccess().getSourceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getToKeyword_3()); }

	'to' 

{ after(grammarAccess.getTransitionAccess().getToKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetAssignment_4()); }
(rule__Transition__TargetAssignment_4)
{ after(grammarAccess.getTransitionAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__5__Impl
	rule__Transition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__6__Impl
	rule__Transition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_6()); }
(rule__Transition__Group_6__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Transition__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_6__0__Impl
	rule__Transition__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getStatementsAssignment_6_0()); }
(rule__Transition__StatementsAssignment_6_0)
{ after(grammarAccess.getTransitionAccess().getStatementsAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_6_1()); }
(rule__Transition__Group_6_1__0)*
{ after(grammarAccess.getTransitionAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_6_1__0__Impl
	rule__Transition__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSemicolonKeyword_6_1_0()); }

	';' 

{ after(grammarAccess.getTransitionAccess().getSemicolonKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getStatementsAssignment_6_1_1()); }
(rule__Transition__StatementsAssignment_6_1_1)
{ after(grammarAccess.getTransitionAccess().getStatementsAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Delay__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delay__Group__0__Impl
	rule__Delay__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayAccess().getAfterKeyword_0()); }

	'after' 

{ after(grammarAccess.getDelayAccess().getAfterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delay__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delay__Group__1__Impl
	rule__Delay__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayAccess().getValueAssignment_1()); }
(rule__Delay__ValueAssignment_1)
{ after(grammarAccess.getDelayAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delay__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delay__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayAccess().getMsKeyword_2()); }

	'ms' 

{ after(grammarAccess.getDelayAccess().getMsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalReception__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group__0__Impl
	rule__SignalReception__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getReceiveKeyword_0()); }

	'receive' 

{ after(grammarAccess.getSignalReceptionAccess().getReceiveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReception__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group__1__Impl
	rule__SignalReception__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getSignalNameAssignment_1()); }
(rule__SignalReception__SignalNameAssignment_1)
{ after(grammarAccess.getSignalReceptionAccess().getSignalNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReception__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group__2__Impl
	rule__SignalReception__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getSignalReceptionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReception__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group__3__Impl
	rule__SignalReception__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getGroup_3()); }
(rule__SignalReception__Group_3__0)?
{ after(grammarAccess.getSignalReceptionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReception__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group__4__Impl
	rule__SignalReception__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getGroup_4()); }
(rule__SignalReception__Group_4__0)?
{ after(grammarAccess.getSignalReceptionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReception__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group__5__Impl
	rule__SignalReception__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getSignalReceptionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReception__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group__6__Impl
	rule__SignalReception__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getFromKeyword_6()); }

	'from' 

{ after(grammarAccess.getSignalReceptionAccess().getFromKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReception__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getPortAssignment_7()); }
(rule__SignalReception__PortAssignment_7)
{ after(grammarAccess.getSignalReceptionAccess().getPortAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SignalReception__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group_3__0__Impl
	rule__SignalReception__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getArgumentsAssignment_3_0()); }
(rule__SignalReception__ArgumentsAssignment_3_0)
{ after(grammarAccess.getSignalReceptionAccess().getArgumentsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReception__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getGroup_3_1()); }
(rule__SignalReception__Group_3_1__0)*
{ after(grammarAccess.getSignalReceptionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalReception__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group_3_1__0__Impl
	rule__SignalReception__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getSignalReceptionAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReception__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getArgumentsAssignment_3_1_1()); }
(rule__SignalReception__ArgumentsAssignment_3_1_1)
{ after(grammarAccess.getSignalReceptionAccess().getArgumentsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalReception__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group_4__0__Impl
	rule__SignalReception__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getVerticalLineKeyword_4_0()); }

	'|' 

{ after(grammarAccess.getSignalReceptionAccess().getVerticalLineKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReception__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReception__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getConditionAssignment_4_1()); }
(rule__SignalReception__ConditionAssignment_4_1)
{ after(grammarAccess.getSignalReceptionAccess().getConditionAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalArgumentExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalArgumentExpression__Group__0__Impl
	rule__SignalArgumentExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalArgumentExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalArgumentExpressionAccess().getLeftSquareBracketLeftSquareBracketKeyword_0()); }

	'[[' 

{ after(grammarAccess.getSignalArgumentExpressionAccess().getLeftSquareBracketLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalArgumentExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalArgumentExpression__Group__1__Impl
	rule__SignalArgumentExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalArgumentExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalArgumentExpressionAccess().getExpressionAssignment_1()); }
(rule__SignalArgumentExpression__ExpressionAssignment_1)
{ after(grammarAccess.getSignalArgumentExpressionAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalArgumentExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalArgumentExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalArgumentExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalArgumentExpressionAccess().getRightSquareBracketRightSquareBracketKeyword_2()); }

	']]' 

{ after(grammarAccess.getSignalArgumentExpressionAccess().getRightSquareBracketRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVariableAssignment_0()); }
(rule__Assignment__VariableAssignment_0)
{ after(grammarAccess.getAssignmentAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_1()); }

	':=' 

{ after(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionAssignment_2()); }
(rule__Assignment__ExpressionAssignment_2)
{ after(grammarAccess.getAssignmentAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SendSignal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SendSignal__Group__0__Impl
	rule__SendSignal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getSendKeyword_0()); }

	'send' 

{ after(grammarAccess.getSendSignalAccess().getSendKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SendSignal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SendSignal__Group__1__Impl
	rule__SendSignal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getSignalNameAssignment_1()); }
(rule__SendSignal__SignalNameAssignment_1)
{ after(grammarAccess.getSendSignalAccess().getSignalNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SendSignal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SendSignal__Group__2__Impl
	rule__SendSignal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getSendSignalAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SendSignal__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SendSignal__Group__3__Impl
	rule__SendSignal__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getGroup_3()); }
(rule__SendSignal__Group_3__0)?
{ after(grammarAccess.getSendSignalAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SendSignal__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SendSignal__Group__4__Impl
	rule__SendSignal__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getSendSignalAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SendSignal__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SendSignal__Group__5__Impl
	rule__SendSignal__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getToKeyword_5()); }

	'to' 

{ after(grammarAccess.getSendSignalAccess().getToKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SendSignal__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SendSignal__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getPortAssignment_6()); }
(rule__SendSignal__PortAssignment_6)
{ after(grammarAccess.getSendSignalAccess().getPortAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SendSignal__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SendSignal__Group_3__0__Impl
	rule__SendSignal__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getArgumentsAssignment_3_0()); }
(rule__SendSignal__ArgumentsAssignment_3_0)
{ after(grammarAccess.getSendSignalAccess().getArgumentsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SendSignal__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SendSignal__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getGroup_3_1()); }
(rule__SendSignal__Group_3_1__0)*
{ after(grammarAccess.getSendSignalAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SendSignal__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SendSignal__Group_3_1__0__Impl
	rule__SendSignal__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getSendSignalAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SendSignal__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SendSignal__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getArgumentsAssignment_3_1_1()); }
(rule__SendSignal__ArgumentsAssignment_3_1_1)
{ after(grammarAccess.getSendSignalAccess().getArgumentsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Object__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__0__Impl
	rule__Object__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getNameAssignment_0()); }
(rule__Object__NameAssignment_0)
{ after(grammarAccess.getObjectAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__1__Impl
	rule__Object__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getObjectAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Object__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Object__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Object__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getClassAssignment_2()); }
(rule__Object__ClassAssignment_2)
{ after(grammarAccess.getObjectAccess().getClassAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnidirectionalChannel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group__0__Impl
	rule__UnidirectionalChannel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getNameAssignment_0()); }
(rule__UnidirectionalChannel__NameAssignment_0)
{ after(grammarAccess.getUnidirectionalChannelAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group__1__Impl
	rule__UnidirectionalChannel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getUnidirectionalChannelAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group__2__Impl
	rule__UnidirectionalChannel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getGroup_2()); }
(rule__UnidirectionalChannel__Group_2__0)?
{ after(grammarAccess.getUnidirectionalChannelAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group__3__Impl
	rule__UnidirectionalChannel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getUnidirectionalChannelAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group__4__Impl
	rule__UnidirectionalChannel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getChannelTypeAssignment_4()); }
(rule__UnidirectionalChannel__ChannelTypeAssignment_4)
{ after(grammarAccess.getUnidirectionalChannelAccess().getChannelTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group__5__Impl
	rule__UnidirectionalChannel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getFromKeyword_5()); }

	'from' 

{ after(grammarAccess.getUnidirectionalChannelAccess().getFromKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group__6__Impl
	rule__UnidirectionalChannel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getSourceObjectAssignment_6()); }
(rule__UnidirectionalChannel__SourceObjectAssignment_6)
{ after(grammarAccess.getUnidirectionalChannelAccess().getSourceObjectAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group__7__Impl
	rule__UnidirectionalChannel__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getFullStopKeyword_7()); }

	'.' 

{ after(grammarAccess.getUnidirectionalChannelAccess().getFullStopKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group__8__Impl
	rule__UnidirectionalChannel__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getSourcePortAssignment_8()); }
(rule__UnidirectionalChannel__SourcePortAssignment_8)
{ after(grammarAccess.getUnidirectionalChannelAccess().getSourcePortAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group__9__Impl
	rule__UnidirectionalChannel__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getToKeyword_9()); }

	'to' 

{ after(grammarAccess.getUnidirectionalChannelAccess().getToKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group__10__Impl
	rule__UnidirectionalChannel__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getTargetObjectAssignment_10()); }
(rule__UnidirectionalChannel__TargetObjectAssignment_10)
{ after(grammarAccess.getUnidirectionalChannelAccess().getTargetObjectAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group__11__Impl
	rule__UnidirectionalChannel__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getFullStopKeyword_11()); }

	'.' 

{ after(grammarAccess.getUnidirectionalChannelAccess().getFullStopKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getTargetPortAssignment_12()); }
(rule__UnidirectionalChannel__TargetPortAssignment_12)
{ after(grammarAccess.getUnidirectionalChannelAccess().getTargetPortAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__UnidirectionalChannel__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group_2__0__Impl
	rule__UnidirectionalChannel__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getArgumentTypesAssignment_2_0()); }
(rule__UnidirectionalChannel__ArgumentTypesAssignment_2_0)
{ after(grammarAccess.getUnidirectionalChannelAccess().getArgumentTypesAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getGroup_2_1()); }
(rule__UnidirectionalChannel__Group_2_1__0)*
{ after(grammarAccess.getUnidirectionalChannelAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnidirectionalChannel__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group_2_1__0__Impl
	rule__UnidirectionalChannel__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getUnidirectionalChannelAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnidirectionalChannel__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnidirectionalChannel__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getArgumentTypesAssignment_2_1_1()); }
(rule__UnidirectionalChannel__ArgumentTypesAssignment_2_1_1)
{ after(grammarAccess.getUnidirectionalChannelAccess().getArgumentTypesAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BidirectionalChannel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group__0__Impl
	rule__BidirectionalChannel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getNameAssignment_0()); }
(rule__BidirectionalChannel__NameAssignment_0)
{ after(grammarAccess.getBidirectionalChannelAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group__1__Impl
	rule__BidirectionalChannel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getBidirectionalChannelAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group__2__Impl
	rule__BidirectionalChannel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getGroup_2()); }
(rule__BidirectionalChannel__Group_2__0)?
{ after(grammarAccess.getBidirectionalChannelAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group__3__Impl
	rule__BidirectionalChannel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getBidirectionalChannelAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group__4__Impl
	rule__BidirectionalChannel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getChannelTypeAssignment_4()); }
(rule__BidirectionalChannel__ChannelTypeAssignment_4)
{ after(grammarAccess.getBidirectionalChannelAccess().getChannelTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group__5__Impl
	rule__BidirectionalChannel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getBetweenKeyword_5()); }

	'between' 

{ after(grammarAccess.getBidirectionalChannelAccess().getBetweenKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group__6__Impl
	rule__BidirectionalChannel__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getObject1Assignment_6()); }
(rule__BidirectionalChannel__Object1Assignment_6)
{ after(grammarAccess.getBidirectionalChannelAccess().getObject1Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group__7__Impl
	rule__BidirectionalChannel__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getFullStopKeyword_7()); }

	'.' 

{ after(grammarAccess.getBidirectionalChannelAccess().getFullStopKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group__8__Impl
	rule__BidirectionalChannel__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getPort1Assignment_8()); }
(rule__BidirectionalChannel__Port1Assignment_8)
{ after(grammarAccess.getBidirectionalChannelAccess().getPort1Assignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group__9__Impl
	rule__BidirectionalChannel__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getAndKeyword_9()); }

	'and' 

{ after(grammarAccess.getBidirectionalChannelAccess().getAndKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group__10__Impl
	rule__BidirectionalChannel__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getObject2Assignment_10()); }
(rule__BidirectionalChannel__Object2Assignment_10)
{ after(grammarAccess.getBidirectionalChannelAccess().getObject2Assignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group__11__Impl
	rule__BidirectionalChannel__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getFullStopKeyword_11()); }

	'.' 

{ after(grammarAccess.getBidirectionalChannelAccess().getFullStopKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getPort2Assignment_12()); }
(rule__BidirectionalChannel__Port2Assignment_12)
{ after(grammarAccess.getBidirectionalChannelAccess().getPort2Assignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__BidirectionalChannel__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group_2__0__Impl
	rule__BidirectionalChannel__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getArgumentTypesAssignment_2_0()); }
(rule__BidirectionalChannel__ArgumentTypesAssignment_2_0)
{ after(grammarAccess.getBidirectionalChannelAccess().getArgumentTypesAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getGroup_2_1()); }
(rule__BidirectionalChannel__Group_2_1__0)*
{ after(grammarAccess.getBidirectionalChannelAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BidirectionalChannel__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group_2_1__0__Impl
	rule__BidirectionalChannel__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getBidirectionalChannelAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BidirectionalChannel__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BidirectionalChannel__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getArgumentTypesAssignment_2_1_1()); }
(rule__BidirectionalChannel__ArgumentTypesAssignment_2_1_1)
{ after(grammarAccess.getBidirectionalChannelAccess().getArgumentTypesAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
(rule__Variable__TypeAssignment_0)
{ after(grammarAccess.getVariableAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
(rule__Variable__NameAssignment_1)
{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_2()); }
(rule__Variable__Group_2__0)?
{ after(grammarAccess.getVariableAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_2__0__Impl
	rule__Variable__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getVariableAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getIntialValueAssignment_2_1()); }
(rule__Variable__IntialValueAssignment_2_1)
{ after(grammarAccess.getVariableAccess().getIntialValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTerminalExpressionParserRuleCall_0()); }
	ruleTerminalExpression
{ after(grammarAccess.getExpressionAccess().getTerminalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)?
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBinaryOperatorExpressionOperand1Action_1_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getBinaryOperatorExpressionOperand1Action_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOperatorAssignment_1_1()); }
(rule__Expression__OperatorAssignment_1_1)
{ after(grammarAccess.getExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOperand2Assignment_1_2()); }
(rule__Expression__Operand2Assignment_1_2)
{ after(grammarAccess.getExpressionAccess().getOperand2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BracketExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BracketExpression__Group__0__Impl
	rule__BracketExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getBracketExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BracketExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BracketExpression__Group__1__Impl
	rule__BracketExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketExpressionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getBracketExpressionAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BracketExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BracketExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BracketExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBracketExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getBracketExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ClassesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getClassesClassParserRuleCall_3_1_0()); }
	ruleClass{ after(grammarAccess.getModelAccess().getClassesClassParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ObjectsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getObjectsObjectParserRuleCall_4_1_0()); }
	ruleObject{ after(grammarAccess.getModelAccess().getObjectsObjectParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ChannelsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getChannelsChannelParserRuleCall_5_1_0()); }
	ruleChannel{ after(grammarAccess.getModelAccess().getChannelsChannelParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__VariablesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getVariablesVariableParserRuleCall_2_1_0()); }
	ruleVariable{ after(grammarAccess.getClassAccess().getVariablesVariableParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__PortsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getPortsPortParserRuleCall_3_1_0()); }
	rulePort{ after(grammarAccess.getClassAccess().getPortsPortParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__StateMachinesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getStateMachinesStateMachineParserRuleCall_4_1_0()); }
	ruleStateMachine{ after(grammarAccess.getClassAccess().getStateMachinesStateMachineParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__VariablesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVariablesVariableParserRuleCall_2_1_0()); }
	ruleVariable{ after(grammarAccess.getStateMachineAccess().getVariablesVariableParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__VerticesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVerticesInitialParserRuleCall_3_1_0()); }
	ruleInitial{ after(grammarAccess.getStateMachineAccess().getVerticesInitialParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__VerticesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVerticesStateParserRuleCall_4_1_0()); }
	ruleState{ after(grammarAccess.getStateMachineAccess().getVerticesStateParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__VerticesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVerticesFinalParserRuleCall_5_1_0()); }
	ruleFinal{ after(grammarAccess.getStateMachineAccess().getVerticesFinalParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__TransitionsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_6_1_0()); }
	ruleTransition{ after(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getInitialAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Final__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFinalAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getFinalAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VertexReference__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVertexReferenceAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getVertexReferenceAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__SourceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSourceVertexReferenceParserRuleCall_2_0()); }
	ruleVertexReference{ after(grammarAccess.getTransitionAccess().getSourceVertexReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetVertexReferenceParserRuleCall_4_0()); }
	ruleVertexReference{ after(grammarAccess.getTransitionAccess().getTargetVertexReferenceParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__StatementsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getStatementsStatementParserRuleCall_6_0_0()); }
	ruleStatement{ after(grammarAccess.getTransitionAccess().getStatementsStatementParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__StatementsAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getStatementsStatementParserRuleCall_6_1_1_0()); }
	ruleStatement{ after(grammarAccess.getTransitionAccess().getStatementsStatementParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delay__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getDelayAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PortReference__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortReferenceAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getPortReferenceAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__SignalNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getSignalNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSignalReceptionAccess().getSignalNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__ArgumentsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getArgumentsSignalArgumentParserRuleCall_3_0_0()); }
	ruleSignalArgument{ after(grammarAccess.getSignalReceptionAccess().getArgumentsSignalArgumentParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__ArgumentsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getArgumentsSignalArgumentParserRuleCall_3_1_1_0()); }
	ruleSignalArgument{ after(grammarAccess.getSignalReceptionAccess().getArgumentsSignalArgumentParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__ConditionAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getConditionExpressionParserRuleCall_4_1_0()); }
	ruleExpression{ after(grammarAccess.getSignalReceptionAccess().getConditionExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReception__PortAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionAccess().getPortPortReferenceParserRuleCall_7_0()); }
	rulePortReference{ after(grammarAccess.getSignalReceptionAccess().getPortPortReferenceParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalArgumentVariable__VariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalArgumentVariableAccess().getVariableVariableReferenceParserRuleCall_0()); }
	ruleVariableReference{ after(grammarAccess.getSignalArgumentVariableAccess().getVariableVariableReferenceParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalArgumentExpression__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalArgumentExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getSignalArgumentExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVariableVariableReferenceParserRuleCall_0_0()); }
	ruleVariableReference{ after(grammarAccess.getAssignmentAccess().getVariableVariableReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__SignalNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getSignalNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSendSignalAccess().getSignalNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__ArgumentsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getArgumentsExpressionParserRuleCall_3_0_0()); }
	ruleExpression{ after(grammarAccess.getSendSignalAccess().getArgumentsExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__ArgumentsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getArgumentsExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getSendSignalAccess().getArgumentsExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SendSignal__PortAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSendSignalAccess().getPortPortReferenceParserRuleCall_6_0()); }
	rulePortReference{ after(grammarAccess.getSendSignalAccess().getPortPortReferenceParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getObjectAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Object__ClassAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectAccess().getClassClassCrossReference_2_0()); }
(
{ before(grammarAccess.getObjectAccess().getClassClassIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getObjectAccess().getClassClassIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getObjectAccess().getClassClassCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Port__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getUnidirectionalChannelAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__ArgumentTypesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getArgumentTypesArgumentTypeParserRuleCall_2_0_0()); }
	ruleArgumentType{ after(grammarAccess.getUnidirectionalChannelAccess().getArgumentTypesArgumentTypeParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__ArgumentTypesAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getArgumentTypesArgumentTypeParserRuleCall_2_1_1_0()); }
	ruleArgumentType{ after(grammarAccess.getUnidirectionalChannelAccess().getArgumentTypesArgumentTypeParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__ChannelTypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getChannelTypeChannelTypeEnumRuleCall_4_0()); }
	ruleChannelType{ after(grammarAccess.getUnidirectionalChannelAccess().getChannelTypeChannelTypeEnumRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__SourceObjectAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getSourceObjectObjectCrossReference_6_0()); }
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getSourceObjectObjectIDTerminalRuleCall_6_0_1()); }
	RULE_ID{ after(grammarAccess.getUnidirectionalChannelAccess().getSourceObjectObjectIDTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getUnidirectionalChannelAccess().getSourceObjectObjectCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__SourcePortAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getSourcePortPortReferenceParserRuleCall_8_0()); }
	rulePortReference{ after(grammarAccess.getUnidirectionalChannelAccess().getSourcePortPortReferenceParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__TargetObjectAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getTargetObjectObjectCrossReference_10_0()); }
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getTargetObjectObjectIDTerminalRuleCall_10_0_1()); }
	RULE_ID{ after(grammarAccess.getUnidirectionalChannelAccess().getTargetObjectObjectIDTerminalRuleCall_10_0_1()); }
)
{ after(grammarAccess.getUnidirectionalChannelAccess().getTargetObjectObjectCrossReference_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnidirectionalChannel__TargetPortAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnidirectionalChannelAccess().getTargetPortPortReferenceParserRuleCall_12_0()); }
	rulePortReference{ after(grammarAccess.getUnidirectionalChannelAccess().getTargetPortPortReferenceParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getBidirectionalChannelAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__ArgumentTypesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getArgumentTypesArgumentTypeParserRuleCall_2_0_0()); }
	ruleArgumentType{ after(grammarAccess.getBidirectionalChannelAccess().getArgumentTypesArgumentTypeParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__ArgumentTypesAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getArgumentTypesArgumentTypeParserRuleCall_2_1_1_0()); }
	ruleArgumentType{ after(grammarAccess.getBidirectionalChannelAccess().getArgumentTypesArgumentTypeParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__ChannelTypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getChannelTypeChannelTypeEnumRuleCall_4_0()); }
	ruleChannelType{ after(grammarAccess.getBidirectionalChannelAccess().getChannelTypeChannelTypeEnumRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Object1Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getObject1ObjectCrossReference_6_0()); }
(
{ before(grammarAccess.getBidirectionalChannelAccess().getObject1ObjectIDTerminalRuleCall_6_0_1()); }
	RULE_ID{ after(grammarAccess.getBidirectionalChannelAccess().getObject1ObjectIDTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getBidirectionalChannelAccess().getObject1ObjectCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Port1Assignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getPort1PortReferenceParserRuleCall_8_0()); }
	rulePortReference{ after(grammarAccess.getBidirectionalChannelAccess().getPort1PortReferenceParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Object2Assignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getObject2ObjectCrossReference_10_0()); }
(
{ before(grammarAccess.getBidirectionalChannelAccess().getObject2ObjectIDTerminalRuleCall_10_0_1()); }
	RULE_ID{ after(grammarAccess.getBidirectionalChannelAccess().getObject2ObjectIDTerminalRuleCall_10_0_1()); }
)
{ after(grammarAccess.getBidirectionalChannelAccess().getObject2ObjectCrossReference_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BidirectionalChannel__Port2Assignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBidirectionalChannelAccess().getPort2PortReferenceParserRuleCall_12_0()); }
	rulePortReference{ after(grammarAccess.getBidirectionalChannelAccess().getPort2PortReferenceParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentType__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentTypeAccess().getTypePrimitiveTypeEnumRuleCall_0()); }
	rulePrimitiveType{ after(grammarAccess.getArgumentTypeAccess().getTypePrimitiveTypeEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypePrimitiveTypeEnumRuleCall_0_0()); }
	rulePrimitiveType{ after(grammarAccess.getVariableAccess().getTypePrimitiveTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__IntialValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getIntialValueExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getVariableAccess().getIntialValueExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOperatorOperatorEnumRuleCall_1_1_0()); }
	ruleOperator{ after(grammarAccess.getExpressionAccess().getOperatorOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Operand2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOperand2ExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getOperand2ExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanConstantExpression__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanConstantExpressionAccess().getValueBOOLEANTerminalRuleCall_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getBooleanConstantExpressionAccess().getValueBOOLEANTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerConstantExpression__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerConstantExpressionAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntegerConstantExpressionAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstantExpression__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringConstantExpressionAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringConstantExpressionAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getVariableReferenceAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableExpression__VariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableExpressionAccess().getVariableVariableReferenceParserRuleCall_0()); }
	ruleVariableReference{ after(grammarAccess.getVariableExpressionAccess().getVariableVariableReferenceParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


