/**
 */
package poosl.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import poosl.util.PooslAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class PooslItemProviderAdapterFactory extends PooslAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public PooslItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Abort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbortItemProvider abortItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Abort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbortAdapter() {
		if (abortItemProvider == null) {
			abortItemProvider = new AbortItemProvider(this);
		}

		return abortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Assignment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssignmentItemProvider assignmentItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Assignment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssignmentAdapter() {
		if (assignmentItemProvider == null) {
			assignmentItemProvider = new AssignmentItemProvider(this);
		}

		return assignmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Atomic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AtomicItemProvider atomicItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Atomic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAtomicAdapter() {
		if (atomicItemProvider == null) {
			atomicItemProvider = new AtomicItemProvider(this);
		}

		return atomicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Channel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChannelItemProvider channelItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Channel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChannelAdapter() {
		if (channelItemProvider == null) {
			channelItemProvider = new ChannelItemProvider(this);
		}

		return channelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.ConditionalExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionalExpressionItemProvider conditionalExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.ConditionalExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionalExpressionAdapter() {
		if (conditionalExpressionItemProvider == null) {
			conditionalExpressionItemProvider = new ConditionalExpressionItemProvider(this);
		}

		return conditionalExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.ConditionalStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionalStatementItemProvider conditionalStatementItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.ConditionalStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionalStatementAdapter() {
		if (conditionalStatementItemProvider == null) {
			conditionalStatementItemProvider = new ConditionalStatementItemProvider(this);
		}

		return conditionalStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Constant} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstantItemProvider constantItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Constant}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstantAdapter() {
		if (constantItemProvider == null) {
			constantItemProvider = new ConstantItemProvider(this);
		}

		return constantItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.ConstantExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstantExpressionItemProvider constantExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.ConstantExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstantExpressionAdapter() {
		if (constantExpressionItemProvider == null) {
			constantExpressionItemProvider = new ConstantExpressionItemProvider(this);
		}

		return constantExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.CurrentTime} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CurrentTimeItemProvider currentTimeItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.CurrentTime}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCurrentTimeAdapter() {
		if (currentTimeItemProvider == null) {
			currentTimeItemProvider = new CurrentTimeItemProvider(this);
		}

		return currentTimeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.DataClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataClassItemProvider dataClassItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.DataClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataClassAdapter() {
		if (dataClassItemProvider == null) {
			dataClassItemProvider = new DataClassItemProvider(this);
		}

		return dataClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.DataMethod} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataMethodItemProvider dataMethodItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.DataMethod}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataMethodAdapter() {
		if (dataMethodItemProvider == null) {
			dataMethodItemProvider = new DataMethodItemProvider(this);
		}

		return dataMethodItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.DataMethodCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataMethodCallItemProvider dataMethodCallItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.DataMethodCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataMethodCallAdapter() {
		if (dataMethodCallItemProvider == null) {
			dataMethodCallItemProvider = new DataMethodCallItemProvider(this);
		}

		return dataMethodCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.PrimitiveDataMethodCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimitiveDataMethodCallItemProvider primitiveDataMethodCallItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.PrimitiveDataMethodCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimitiveDataMethodCallAdapter() {
		if (primitiveDataMethodCallItemProvider == null) {
			primitiveDataMethodCallItemProvider = new PrimitiveDataMethodCallItemProvider(this);
		}

		return primitiveDataMethodCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.DataObjectCreation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataObjectCreationItemProvider dataObjectCreationItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.DataObjectCreation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataObjectCreationAdapter() {
		if (dataObjectCreationItemProvider == null) {
			dataObjectCreationItemProvider = new DataObjectCreationItemProvider(this);
		}

		return dataObjectCreationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.ExpressionList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionListItemProvider expressionListItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.ExpressionList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionListAdapter() {
		if (expressionListItemProvider == null) {
			expressionListItemProvider = new ExpressionListItemProvider(this);
		}

		return expressionListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.GuardedExecution} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GuardedExecutionItemProvider guardedExecutionItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.GuardedExecution}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGuardedExecutionAdapter() {
		if (guardedExecutionItemProvider == null) {
			guardedExecutionItemProvider = new GuardedExecutionItemProvider(this);
		}

		return guardedExecutionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.IncomingMessage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IncomingMessageItemProvider incomingMessageItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.IncomingMessage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIncomingMessageAdapter() {
		if (incomingMessageItemProvider == null) {
			incomingMessageItemProvider = new IncomingMessageItemProvider(this);
		}

		return incomingMessageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Interrupt} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterruptItemProvider interruptItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Interrupt}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterruptAdapter() {
		if (interruptItemProvider == null) {
			interruptItemProvider = new InterruptItemProvider(this);
		}

		return interruptItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.LoopExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoopExpressionItemProvider loopExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.LoopExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoopExpressionAdapter() {
		if (loopExpressionItemProvider == null) {
			loopExpressionItemProvider = new LoopExpressionItemProvider(this);
		}

		return loopExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.LoopStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoopStatementItemProvider loopStatementItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.LoopStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoopStatementAdapter() {
		if (loopStatementItemProvider == null) {
			loopStatementItemProvider = new LoopStatementItemProvider(this);
		}

		return loopStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Message} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageItemProvider messageItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Message}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageAdapter() {
		if (messageItemProvider == null) {
			messageItemProvider = new MessageItemProvider(this);
		}

		return messageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.MessageReceive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageReceiveItemProvider messageReceiveItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.MessageReceive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageReceiveAdapter() {
		if (messageReceiveItemProvider == null) {
			messageReceiveItemProvider = new MessageReceiveItemProvider(this);
		}

		return messageReceiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.MessageSend} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageSendItemProvider messageSendItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.MessageSend}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageSendAdapter() {
		if (messageSendItemProvider == null) {
			messageSendItemProvider = new MessageSendItemProvider(this);
		}

		return messageSendItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Model} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelItemProvider modelItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Model}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelAdapter() {
		if (modelItemProvider == null) {
			modelItemProvider = new ModelItemProvider(this);
		}

		return modelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.OutgoingMessage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutgoingMessageItemProvider outgoingMessageItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.OutgoingMessage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutgoingMessageAdapter() {
		if (outgoingMessageItemProvider == null) {
			outgoingMessageItemProvider = new OutgoingMessageItemProvider(this);
		}

		return outgoingMessageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.ParallelComposition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParallelCompositionItemProvider parallelCompositionItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.ParallelComposition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParallelCompositionAdapter() {
		if (parallelCompositionItemProvider == null) {
			parallelCompositionItemProvider = new ParallelCompositionItemProvider(this);
		}

		return parallelCompositionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Parameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterItemProvider parameterItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Parameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterAdapter() {
		if (parameterItemProvider == null) {
			parameterItemProvider = new ParameterItemProvider(this);
		}

		return parameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.ParameterExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterExpressionItemProvider parameterExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.ParameterExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterExpressionAdapter() {
		if (parameterExpressionItemProvider == null) {
			parameterExpressionItemProvider = new ParameterExpressionItemProvider(this);
		}

		return parameterExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.PrimitiveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrimitiveTypeItemProvider primitiveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.PrimitiveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrimitiveTypeAdapter() {
		if (primitiveTypeItemProvider == null) {
			primitiveTypeItemProvider = new PrimitiveTypeItemProvider(this);
		}

		return primitiveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.ProcessClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessClassItemProvider processClassItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.ProcessClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessClassAdapter() {
		if (processClassItemProvider == null) {
			processClassItemProvider = new ProcessClassItemProvider(this);
		}

		return processClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.ProcessInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessInstanceItemProvider processInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.ProcessInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessInstanceAdapter() {
		if (processInstanceItemProvider == null) {
			processInstanceItemProvider = new ProcessInstanceItemProvider(this);
		}

		return processInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.ProcessMethod} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessMethodItemProvider processMethodItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.ProcessMethod}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessMethodAdapter() {
		if (processMethodItemProvider == null) {
			processMethodItemProvider = new ProcessMethodItemProvider(this);
		}

		return processMethodItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.ProcessMethodCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessMethodCallItemProvider processMethodCallItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.ProcessMethodCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessMethodCallAdapter() {
		if (processMethodCallItemProvider == null) {
			processMethodCallItemProvider = new ProcessMethodCallItemProvider(this);
		}

		return processMethodCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Port} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortItemProvider portItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Port}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPortAdapter() {
		if (portItemProvider == null) {
			portItemProvider = new PortItemProvider(this);
		}

		return portItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.ReferenceSelf} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceSelfItemProvider referenceSelfItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.ReferenceSelf}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceSelfAdapter() {
		if (referenceSelfItemProvider == null) {
			referenceSelfItemProvider = new ReferenceSelfItemProvider(this);
		}

		return referenceSelfItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.ReturnExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReturnExpressionItemProvider returnExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.ReturnExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReturnExpressionAdapter() {
		if (returnExpressionItemProvider == null) {
			returnExpressionItemProvider = new ReturnExpressionItemProvider(this);
		}

		return returnExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Selection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelectionItemProvider selectionItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Selection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelectionAdapter() {
		if (selectionItemProvider == null) {
			selectionItemProvider = new SelectionItemProvider(this);
		}

		return selectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Skip} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SkipItemProvider skipItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Skip}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSkipAdapter() {
		if (skipItemProvider == null) {
			skipItemProvider = new SkipItemProvider(this);
		}

		return skipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Statement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StatementItemProvider statementItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Statement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStatementAdapter() {
		if (statementItemProvider == null) {
			statementItemProvider = new StatementItemProvider(this);
		}

		return statementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.StatementList} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StatementListItemProvider statementListItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.StatementList}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStatementListAdapter() {
		if (statementListItemProvider == null) {
			statementListItemProvider = new StatementListItemProvider(this);
		}

		return statementListItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.TimeSynchronisation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeSynchronisationItemProvider timeSynchronisationItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.TimeSynchronisation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeSynchronisationAdapter() {
		if (timeSynchronisationItemProvider == null) {
			timeSynchronisationItemProvider = new TimeSynchronisationItemProvider(this);
		}

		return timeSynchronisationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.Variable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableItemProvider variableItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.Variable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableAdapter() {
		if (variableItemProvider == null) {
			variableItemProvider = new VariableItemProvider(this);
		}

		return variableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link poosl.VariableExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableExpressionItemProvider variableExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link poosl.VariableExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableExpressionAdapter() {
		if (variableExpressionItemProvider == null) {
			variableExpressionItemProvider = new VariableExpressionItemProvider(this);
		}

		return variableExpressionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (abortItemProvider != null) abortItemProvider.dispose();
		if (assignmentItemProvider != null) assignmentItemProvider.dispose();
		if (atomicItemProvider != null) atomicItemProvider.dispose();
		if (channelItemProvider != null) channelItemProvider.dispose();
		if (conditionalExpressionItemProvider != null) conditionalExpressionItemProvider.dispose();
		if (conditionalStatementItemProvider != null) conditionalStatementItemProvider.dispose();
		if (constantItemProvider != null) constantItemProvider.dispose();
		if (constantExpressionItemProvider != null) constantExpressionItemProvider.dispose();
		if (currentTimeItemProvider != null) currentTimeItemProvider.dispose();
		if (dataClassItemProvider != null) dataClassItemProvider.dispose();
		if (dataMethodItemProvider != null) dataMethodItemProvider.dispose();
		if (dataMethodCallItemProvider != null) dataMethodCallItemProvider.dispose();
		if (primitiveDataMethodCallItemProvider != null) primitiveDataMethodCallItemProvider.dispose();
		if (dataObjectCreationItemProvider != null) dataObjectCreationItemProvider.dispose();
		if (expressionListItemProvider != null) expressionListItemProvider.dispose();
		if (guardedExecutionItemProvider != null) guardedExecutionItemProvider.dispose();
		if (incomingMessageItemProvider != null) incomingMessageItemProvider.dispose();
		if (interruptItemProvider != null) interruptItemProvider.dispose();
		if (loopExpressionItemProvider != null) loopExpressionItemProvider.dispose();
		if (loopStatementItemProvider != null) loopStatementItemProvider.dispose();
		if (messageItemProvider != null) messageItemProvider.dispose();
		if (messageReceiveItemProvider != null) messageReceiveItemProvider.dispose();
		if (messageSendItemProvider != null) messageSendItemProvider.dispose();
		if (modelItemProvider != null) modelItemProvider.dispose();
		if (outgoingMessageItemProvider != null) outgoingMessageItemProvider.dispose();
		if (parallelCompositionItemProvider != null) parallelCompositionItemProvider.dispose();
		if (parameterItemProvider != null) parameterItemProvider.dispose();
		if (parameterExpressionItemProvider != null) parameterExpressionItemProvider.dispose();
		if (primitiveTypeItemProvider != null) primitiveTypeItemProvider.dispose();
		if (processClassItemProvider != null) processClassItemProvider.dispose();
		if (processInstanceItemProvider != null) processInstanceItemProvider.dispose();
		if (processMethodItemProvider != null) processMethodItemProvider.dispose();
		if (processMethodCallItemProvider != null) processMethodCallItemProvider.dispose();
		if (portItemProvider != null) portItemProvider.dispose();
		if (referenceSelfItemProvider != null) referenceSelfItemProvider.dispose();
		if (returnExpressionItemProvider != null) returnExpressionItemProvider.dispose();
		if (selectionItemProvider != null) selectionItemProvider.dispose();
		if (skipItemProvider != null) skipItemProvider.dispose();
		if (statementItemProvider != null) statementItemProvider.dispose();
		if (statementListItemProvider != null) statementListItemProvider.dispose();
		if (timeSynchronisationItemProvider != null) timeSynchronisationItemProvider.dispose();
		if (variableItemProvider != null) variableItemProvider.dispose();
		if (variableExpressionItemProvider != null) variableExpressionItemProvider.dispose();
	}

}
