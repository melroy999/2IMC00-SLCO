{% for locking_phase in model.locks_to_acquire_phases %}
{% for lock_request in locking_phase %}
// P1: Request {{ lock_request | render_java_instruction }}
{% endfor %}
{% endfor %}
{% for lock_request in model.unpacked_lock_requests %}
// P2: Request {{ lock_request | render_java_instruction }}
{% endfor %}
{% for lock_request in model.conflict_resolution_lock_requests %}
// P3: Release {{ lock_request | render_java_instruction }}
{% endfor %}
{% if model.decisions | length > 1 %}
switch(random.nextInt({{ model.decisions | length }})) {
{% for i in range(0, model.decisions | length) %}
{% set decision = model.decisions[i] %}
    case {{ i }} -> {
        {{ decision | render_control_flow_node | indent(8, False) | trim }}
    }
{% endfor %}
}
{% else %}
{{ model.decisions[0] | render_control_flow_node | trim }}
{%- endif %}
{% for lock_request in model.locks_to_release %}
// P4: Release {{ lock_request | render_java_instruction }}
{% endfor %}