import java.util.*;
import java.util.concurrent.locks.ReentrantLock;
{% if settings.running_time != 0 %}
import java.time.Duration;
import java.time.Instant;
{% endif %}

// SLCO model {{ model_name }}.
public class {{ model_name }} {
    // The objects in the model.
    private final SLCO_Class[] objects;

    // Interface for SLCO classes.
    interface SLCO_Class {
        void startThreads();
        void joinThreads();
    }

    {% if constructor_contract != "" %}
    {{ constructor_contract | indent(4, False) | trim }}
    {% endif %}
    {{ model_name }}() {
        // Instantiate the objects.
        objects = new SLCO_Class[] {
            {% for i in object_instantiations %}
            {{ i | indent(12, False) | trim }}{{"," if not loop.last}}
            {% endfor %}
        };
    }

    {% if lock_manager != "" %}
    {{ lock_manager | indent(4, False) | trim }}

    {% endif %}
    {% for c in classes %}
    {{ c | indent(4, False) | trim }}

    {% endfor %}
    // Start all threads.
    private void startThreads() {
        for(SLCO_Class object : objects) {
            object.startThreads();
        }
    }

    // Join all threads.
    private void joinThreads() {
        for(SLCO_Class object : objects) {
            object.joinThreads();
        }
    }

    // Run the application.
    public static void main(String[] args) {
        {{ model_name }} model = new {{ model_name }}();
        model.startThreads();
        model.joinThreads();
    }
}