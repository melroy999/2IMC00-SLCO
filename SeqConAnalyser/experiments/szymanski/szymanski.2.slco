model dve_lamport_05 {

  classes
  GlobalClass {
    variables
      Byte flag1 flag2 flag3
    

    state machines
    thr1 {
      
      initial S0 states S1 S2 SimpleState0 SimpleState1 SimpleState2

      transitions
      S0 -> SimpleState0 {
        flag1 := 1
      }

      SimpleState0 -> S1 {
        flag2 < 3 and flag3 < 3
      }      
      
      S1 -> SimpleState1 {
        flag1 := 3
      }

      SimpleState1 -> S2 {
        flag2 = 1 or flag3 = 1
      }
      
      SimpleState1 -> S3 {
        not(flag2 = 1 or flag3 = 1)
      }

      S2 -> SimpleState2 {
        flag1 := 2
      }

      SimpleState2 -> S3 {
        flag2 = 4 or flag3 = 4
      }

      S3 -> S4 {
        flag1 := 4
      }

      S4 -> S5 {
        flag2 < 2 or flag3 < 2
      }

      S5 -> S6 {
        (2 > flag2 or flag2 > 3) and (2 > flag3 or flag3 > 3)
      }

      S6 -> S0 {
        flag1 := 0
      }
    }

    thr2 {
      
      initial S0 states S1 S2 SimpleState0 SimpleState1 SimpleState2

      transitions
      S0 -> SimpleState0 {
        flag2 := 1
      }

      SimpleState0 -> S1 {
        flag1 < 3 and flag3 < 3
      }      
      
      S1 -> SimpleState1 {
        flag2 := 3
      }

      SimpleState1 -> S2 {
        flag1 = 1 or flag3 = 1
      }
      
      SimpleState1 -> S3 {
        not(flag1 = 1 or flag3 = 1)
      }

      S2 -> SimpleState2 {
        flag2 := 2
      }

      SimpleState2 -> S3 {
        flag1 = 4 or flag3 = 4
      }

      S3 -> S4 {
        flag2 := 4
      }

      S4 -> S5 {
        flag1 < 2 and flag3 < 2
      }

      S5 -> S6 {
        (2 > flag1 or flag1 > 3) and (2 > flag3 or flag3 > 3)
      }

      S6 -> S0 {
        flag2 := 0
      }
    }

    thr3 {
      
      initial S0 states S1 S2 SimpleState0 SimpleState1 SimpleState2

      transitions
      S0 -> SimpleState0 {
        flag3 := 1
      }

      SimpleState0 -> S1 {
        flag1 < 3 and flag2 < 3
      }      
      
      S1 -> SimpleState1 {
        flag3 := 3
      }

      SimpleState1 -> S2 {
        flag1 = 1 or flag2 = 1
      }
      
      SimpleState1 -> S3 {
        not(flag1 = 1 or flag2 = 1)
      }

      S2 -> SimpleState2 {
        flag3 := 2
      }

      SimpleState2 -> S3 {
        flag1 = 4 or flag2 = 4
      }

      S3 -> S4 {
        flag3 := 4
      }

      S4 -> S5 {
        flag1 < 2 and flag2 < 2
      }

      S5 -> S6 {
        (2 > flag1 or flag1 > 3) and (2 > flag2 or flag2 > 3)
      }

      S6 -> S0 {
        flag3 := 0
      }
    }
  }
  objects globalObject: GlobalClass()

}