int want1;
int want2;
int want3;
int turn;

proctype p1 {	
do
:: true ->
		store(want1, 1);
		do
		:: load(want2,1) || load(want3,1) ->
			if
			:: load(turn,1) || load(turn,2) ->
				store(want1, 0);
				
				if
				:: load(turn,0) -> skip;
				fi;
				
				store(want1, 1);
			:: load(turn,0) -> skip;
			fi;
			
		:: load(want2,0) && load(want3,0) -> break;
		od;
		
		store(turn, 1);
		store(want1, 0);
od;
}

proctype p2 {
do
:: true ->
		store(want2, 1);
		do
		:: load(want1,1) || load(want3,1) ->			
			if
			:: load(turn,0) || load(turn,2) ->
				store(want2, 0);
				
				if
				:: load(turn,1) -> skip;
				fi;
				
				store(want2, 1);
			:: load(turn,1) -> skip;
			fi;
			
		:: load(want1,0) && load(want3,0) -> break;
		od;
		
		store(turn, 2);
		store(want2, 0);
od;
}

proctype p3 {
do
:: true ->
		store(want3, 1);
		do
		:: load(want1,1) || load(want2,1) ->			
			if
			:: load(turn,0) || load(turn,1) ->
				store(want3, 0);
				
				if
				:: load(turn,2) -> skip;
				fi;
				
				store(want3, 1);
			:: load(turn,2) -> skip;
			fi;
			
		:: load(want1,0) && load(want2,0) -> break;
		od;
		
		store(turn, 0);
		store(want3, 0);
od;
}
