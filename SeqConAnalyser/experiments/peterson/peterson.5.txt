int want1 = 0;
int want2 = 0;
int want3 = 0;
int want4 = 0;
int want5 = 0;
int want6 = 0;
int turn = 0;

proctype p1 {
int tmp;
int tmp2;
int tmp3;
int tmp4;
int tmp5;
do
:: true ->
		store(want1,1);
		store(turn,1);
		do
		:: true ->
			tmp = loadval(want2);
			tmp2 = loadval(want3);
			tmp3 = loadval(want4);
			tmp4 = loadval(want5);
			tmp5 = loadval(want6);
			if
			:: (tmp == 0 || load(turn,0) || load(turn,2) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp2 == 0 || load(turn,0) || load(turn,1) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp3 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,4) || load(turn,5)) &&
				(tmp4 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,5)) &&
				(tmp5 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,4)) &&
					 -> break;
			:: (tmp == 1 && load(turn,1)) || (tmp2 == 1 && load(turn,2) || (tmp3 == 1 && load(turn,3) ||
				(tmp4 == 1 && load(turn,4) || (tmp5 == 1 && load(turn,5)) -> skip;
			fi;
		od;
		store(want1, 0);
		break;
od;
}

proctype p2 {
int tmp;
int tmp2;
int tmp3;
int tmp4;
int tmp5;
do
:: true ->
		store(want2,1);
		store(turn,2);
		do
		:: true ->
			tmp = loadval(want1);
			tmp2 = loadval(want3);
			tmp3 = loadval(want4);
			tmp4 = loadval(want5);
			tmp5 = loadval(want6);
			if
			:: (tmp == 0 || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp2 == 0 || load(turn,0) || load(turn,1) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp3 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,4) || load(turn,5)) &&
				(tmp4 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,5)) &&
				(tmp5 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,4)) &&
					 -> break;
			:: (tmp == 1 && load(turn,0)) || (tmp2 == 1 && load(turn,2) || (tmp3 == 1 && load(turn,3) ||
				(tmp4 == 1 && load(turn,4) || (tmp5 == 1 && load(turn,5)) -> skip;
			fi;
		od;
		store(want2, 0);
		break;
od;
}

proctype p3 {
int tmp;
int tmp2;
int tmp3;
int tmp4;
int tmp5;
do
:: true ->
		store(want3,1);
		store(turn,3);
		do
		:: true ->
			tmp = loadval(want1);
			tmp2 = loadval(want2);
			tmp3 = loadval(want4);
			tmp4 = loadval(want5);
			tmp5 = loadval(want6);
			if
			:: (tmp == 0 || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp2 == 0 || load(turn,0) || load(turn,2) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp3 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,4) || load(turn,5)) &&
				(tmp4 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,5)) &&
				(tmp5 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,4)) &&
					 -> break;
			:: (tmp == 1 && load(turn,0)) || (tmp2 == 1 && load(turn,1) || (tmp3 == 1 && load(turn,3) ||
				(tmp4 == 1 && load(turn,4) || (tmp5 == 1 && load(turn,5)) -> skip;
			fi;
		od;
		store(want3, 0);
		break;
od;
}

proctype p4 {
int tmp;
int tmp2;
int tmp3;
int tmp4;
int tmp5;
do
:: true ->
		store(want4,1);
		store(turn,4);
		do
		:: true ->
			tmp = loadval(want1);
			tmp2 = loadval(want2);
			tmp3 = loadval(want3);
			tmp4 = loadval(want5);
			tmp5 = loadval(want6);
			if
			:: (tmp == 0 || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp2 == 0 || load(turn,0) || load(turn,2) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp3 == 0 || load(turn,0) || load(turn,1) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp4 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,5)) &&
				(tmp5 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,4)) &&
					 -> break;
			:: (tmp == 1 && load(turn,0)) || (tmp2 == 1 && load(turn,1) || (tmp3 == 1 && load(turn,2) ||
				(tmp4 == 1 && load(turn,4) || (tmp5 == 1 && load(turn,5)) -> skip;
			fi;
		od;
		store(want4, 0);
		break;
od;
}

proctype p5 {
int tmp;
int tmp2;
int tmp3;
int tmp4;
int tmp5;
do
:: true ->
		store(want5,1);
		store(turn,5);
		do
		:: true ->
			tmp = loadval(want1);
			tmp2 = loadval(want2);
			tmp3 = loadval(want3);
			tmp4 = loadval(want4);
			tmp5 = loadval(want6);
			if
			:: (tmp == 0 || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp2 == 0 || load(turn,0) || load(turn,2) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp3 == 0 || load(turn,0) || load(turn,1) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp4 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,4) || load(turn,5)) &&
				(tmp5 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,4)) &&
					 -> break;
			:: (tmp == 1 && load(turn,0)) || (tmp2 == 1 && load(turn,1) || (tmp3 == 1 && load(turn,2) ||
				(tmp4 == 1 && load(turn,3) || (tmp5 == 1 && load(turn,5)) -> skip;
			fi;
		od;
		store(want5, 0);
		break;
od;
}

proctype p6 {
int tmp;
int tmp2;
int tmp3;
int tmp4;
int tmp5;
do
:: true ->
		store(want6,1);
		store(turn,0);
		do
		:: true ->
			tmp = loadval(want1);
			tmp2 = loadval(want2);
			tmp3 = loadval(want3);
			tmp4 = loadval(want4);
			tmp5 = loadval(want5);
			if
			:: (tmp == 0 || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp2 == 0 || load(turn,0) || load(turn,2) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp3 == 0 || load(turn,0) || load(turn,1) || load(turn,3) || load(turn,4) || load(turn,5)) &&
				(tmp4 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,4) || load(turn,5)) &&
				(tmp5 == 0 || load(turn,0) || load(turn,1) || load(turn,2) || load(turn,3) || load(turn,5)) &&
					 -> break;
			:: (tmp == 1 && load(turn,0)) || (tmp2 == 1 && load(turn,1) || (tmp3 == 1 && load(turn,2) ||
				(tmp4 == 1 && load(turn,3) || (tmp5 == 1 && load(turn,4)) -> skip;
			fi;
		od;
		store(want6, 0);
		break;
od;
}
