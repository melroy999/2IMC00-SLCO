model dve_bakery_1 {
classes
	GlobalClass {
		variables
			Byte[2] choosing
			Byte[2] number
		state machines
			P_0 {
				variables
					Byte j
					Byte max
				initial NCS
				states  choose forloop wait CS
				transitions
					from NCS to choose {
						[choosing[0] := 1;j := 0;max := 0]
					}

					from choose to choose {
						[j<2 and number[j]>max; max := number[j];j := j +1]
					}

					from choose to choose {
						[j<2 and number[j]<=max; j := j+1]
					}

					from choose to forloop {
						[j = 2 and max < 9; number[0] := max + 1;j := 0;choosing[0] := 0]
					}

					from forloop to wait {
						j<2 and choosing[j]=0
					}

					from wait to forloop {
						[number[j] = 0 or (number[j] > number[0]) or
			(number[j] = number[0] and 0 <= j); j := j+1]
					}

					from forloop to CS {
						j=2
					}

					from CS to NCS {
						[number[0] := 0]
					}

				}
	
			P_1 {
				variables
					Byte j
					Byte max
				initial NCS
				states  choose forloop wait CS
				transitions
					from NCS to choose {
						[choosing[1] := 1;j := 0;max := 0]
					}

					from choose to choose {
						[j<2 and number[j]>max; max := number[j];j := j +1]
					}

					from choose to choose {
						[j<2 and number[j]<=max; j := j+1]
					}

					from choose to forloop {
						[j = 2 and max < 9; number[1] := max + 1;j := 0;choosing[1] := 0]
					}

					from forloop to wait {
						j<2 and choosing[j]=0
					}

					from wait to forloop {
						[number[j] = 0 or (number[j] > number[1]) or
			(number[j] = number[1] and 1 <= j); j := j+1]
					}

					from forloop to CS {
						j=2
					}

					from CS to NCS {
						[number[1] := 0]
					}

				}
	
	}

objects
	globalObject : GlobalClass()
}
