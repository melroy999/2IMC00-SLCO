model  {
classes
	GlobalClass {
		variables
			Integer[4] b := [0,0,0,2]
			Integer readers
			Integer sem := 1
			Integer change_to
		state machines
			slave_1 {
				variables
					
				initial idle
				states  q0 q1 q2 q3 error_state
				transitions
					from idle to q0 {
						[sem == 1; sem := 0]
					}
	
					from q0 to q1 {
						[b[0] == 1; b[0] := 0]
					}
	
					from q0 to q1 {
						[b[1] == 1; b[1] := 0]
					}
	
					from q0 to q1 {
						[b[2] == 1; b[2] := 0]
					}
	
					from q0 to q1 {
						[b[3] == 1; b[3] := 0]
					}
	
					from q0 to q1 {
						[b[0] != 1  && b[1] != 1  && b[2] != 1  && b[3] != 1]
					}
	
					from q1 to q2 {
						[b[0] == 2; b[0] := 1]
					}
	
					from q1 to q2 {
						[b[1] == 2; b[1] := 1]
					}
	
					from q1 to q2 {
						[b[2] == 2; b[2] := 1]
					}
	
					from q1 to q2 {
						[b[3] == 2; b[3] := 1]
					}
	
					from q1 to error_state {
						[b[0] != 2  && b[1] != 2  && b[2] != 2  && b[3] != 2]
					}
	
					from q2 to q3 {
						[b[0] == 0; b[0] := 2]
					}
	
					from q2 to q3 {
						[b[1] == 0; b[1] := 2]
					}
	
					from q2 to q3 {
						[b[2] == 0; b[2] := 2]
					}
	
					from q2 to q3 {
						[b[3] == 0; b[3] := 2]
					}
	
					from q2 to error_state {
						[b[0] != 0  && b[1] != 0  && b[2] != 0  && b[3] != 0]
					}
	
					from q3 to idle {
						[sem := 1]
					}
	
				}
	
			slave_2 {
				variables
					
				initial idle
				states  q0 q1 q2 q3 error_state
				transitions
					from idle to q0 {
						[sem == 1; sem := 0]
					}
	
					from q0 to q1 {
						[b[0] == 1; b[0] := 0]
					}
	
					from q0 to q1 {
						[b[1] == 1; b[1] := 0]
					}
	
					from q0 to q1 {
						[b[2] == 1; b[2] := 0]
					}
	
					from q0 to q1 {
						[b[3] == 1; b[3] := 0]
					}
	
					from q0 to q1 {
						[b[0] != 1  && b[1] != 1  && b[2] != 1  && b[3] != 1]
					}
	
					from q1 to q2 {
						[b[0] == 2; b[0] := 1]
					}
	
					from q1 to q2 {
						[b[1] == 2; b[1] := 1]
					}
	
					from q1 to q2 {
						[b[2] == 2; b[2] := 1]
					}
	
					from q1 to q2 {
						[b[3] == 2; b[3] := 1]
					}
	
					from q1 to error_state {
						[b[0] != 2  && b[1] != 2  && b[2] != 2  && b[3] != 2]
					}
	
					from q2 to q3 {
						[b[0] == 0; b[0] := 2]
					}
	
					from q2 to q3 {
						[b[1] == 0; b[1] := 2]
					}
	
					from q2 to q3 {
						[b[2] == 0; b[2] := 2]
					}
	
					from q2 to q3 {
						[b[3] == 0; b[3] := 2]
					}
	
					from q2 to error_state {
						[b[0] != 0  && b[1] != 0  && b[2] != 0  && b[3] != 0]
					}
	
					from q3 to idle {
						[sem := 1]
					}
	
				}
	
			slave_3 {
				variables
					
				initial idle
				states  q0 q1 q2 q3 error_state
				transitions
					from idle to q0 {
						[sem == 1; sem := 0]
					}
	
					from q0 to q1 {
						[b[0] == 1; b[0] := 0]
					}
	
					from q0 to q1 {
						[b[1] == 1; b[1] := 0]
					}
	
					from q0 to q1 {
						[b[2] == 1; b[2] := 0]
					}
	
					from q0 to q1 {
						[b[3] == 1; b[3] := 0]
					}
	
					from q0 to q1 {
						[b[0] != 1  && b[1] != 1  && b[2] != 1  && b[3] != 1]
					}
	
					from q1 to q2 {
						[b[0] == 2; b[0] := 1]
					}
	
					from q1 to q2 {
						[b[1] == 2; b[1] := 1]
					}
	
					from q1 to q2 {
						[b[2] == 2; b[2] := 1]
					}
	
					from q1 to q2 {
						[b[3] == 2; b[3] := 1]
					}
	
					from q1 to error_state {
						[b[0] != 2  && b[1] != 2  && b[2] != 2  && b[3] != 2]
					}
	
					from q2 to q3 {
						[b[0] == 0; b[0] := 2]
					}
	
					from q2 to q3 {
						[b[1] == 0; b[1] := 2]
					}
	
					from q2 to q3 {
						[b[2] == 0; b[2] := 2]
					}
	
					from q2 to q3 {
						[b[3] == 0; b[3] := 2]
					}
	
					from q2 to error_state {
						[b[0] != 0  && b[1] != 0  && b[2] != 0  && b[3] != 0]
					}
	
					from q3 to idle {
						[sem := 1]
					}
	
				}
	
			slave_4 {
				variables
					
				initial idle
				states  q0 q1 q2 q3 error_state
				transitions
					from idle to q0 {
						[sem == 1; sem := 0]
					}
	
					from q0 to q1 {
						[b[0] == 1; b[0] := 0]
					}
	
					from q0 to q1 {
						[b[1] == 1; b[1] := 0]
					}
	
					from q0 to q1 {
						[b[2] == 1; b[2] := 0]
					}
	
					from q0 to q1 {
						[b[3] == 1; b[3] := 0]
					}
	
					from q0 to q1 {
						[b[0] != 1  && b[1] != 1  && b[2] != 1  && b[3] != 1]
					}
	
					from q1 to q2 {
						[b[0] == 2; b[0] := 1]
					}
	
					from q1 to q2 {
						[b[1] == 2; b[1] := 1]
					}
	
					from q1 to q2 {
						[b[2] == 2; b[2] := 1]
					}
	
					from q1 to q2 {
						[b[3] == 2; b[3] := 1]
					}
	
					from q1 to error_state {
						[b[0] != 2  && b[1] != 2  && b[2] != 2  && b[3] != 2]
					}
	
					from q2 to q3 {
						[b[0] == 0; b[0] := 2]
					}
	
					from q2 to q3 {
						[b[1] == 0; b[1] := 2]
					}
	
					from q2 to q3 {
						[b[2] == 0; b[2] := 2]
					}
	
					from q2 to q3 {
						[b[3] == 0; b[3] := 2]
					}
	
					from q2 to error_state {
						[b[0] != 0  && b[1] != 0  && b[2] != 0  && b[3] != 0]
					}
	
					from q3 to idle {
						[sem := 1]
					}
	
				}
	
			slave_5 {
				variables
					
				initial idle
				states  q0 q1 q2 q3 error_state
				transitions
					from idle to q0 {
						[sem == 1; sem := 0]
					}
	
					from q0 to q1 {
						[b[0] == 1; b[0] := 0]
					}
	
					from q0 to q1 {
						[b[1] == 1; b[1] := 0]
					}
	
					from q0 to q1 {
						[b[2] == 1; b[2] := 0]
					}
	
					from q0 to q1 {
						[b[3] == 1; b[3] := 0]
					}
	
					from q0 to q1 {
						[b[0] != 1  && b[1] != 1  && b[2] != 1  && b[3] != 1]
					}
	
					from q1 to q2 {
						[b[0] == 2; b[0] := 1]
					}
	
					from q1 to q2 {
						[b[1] == 2; b[1] := 1]
					}
	
					from q1 to q2 {
						[b[2] == 2; b[2] := 1]
					}
	
					from q1 to q2 {
						[b[3] == 2; b[3] := 1]
					}
	
					from q1 to error_state {
						[b[0] != 2  && b[1] != 2  && b[2] != 2  && b[3] != 2]
					}
	
					from q2 to q3 {
						[b[0] == 0; b[0] := 2]
					}
	
					from q2 to q3 {
						[b[1] == 0; b[1] := 2]
					}
	
					from q2 to q3 {
						[b[2] == 0; b[2] := 2]
					}
	
					from q2 to q3 {
						[b[3] == 0; b[3] := 2]
					}
	
					from q2 to error_state {
						[b[0] != 0  && b[1] != 0  && b[2] != 0  && b[3] != 0]
					}
	
					from q3 to idle {
						[sem := 1]
					}
	
				}
	
			slave_6 {
				variables
					
				initial idle
				states  q0 q1 q2 q3 error_state
				transitions
					from idle to q0 {
						[sem == 1; sem := 0]
					}
	
					from q0 to q1 {
						[b[0] == 1; b[0] := 0]
					}
	
					from q0 to q1 {
						[b[1] == 1; b[1] := 0]
					}
	
					from q0 to q1 {
						[b[2] == 1; b[2] := 0]
					}
	
					from q0 to q1 {
						[b[3] == 1; b[3] := 0]
					}
	
					from q0 to q1 {
						[b[0] != 1  && b[1] != 1  && b[2] != 1  && b[3] != 1]
					}
	
					from q1 to q2 {
						[b[0] == 2; b[0] := 1]
					}
	
					from q1 to q2 {
						[b[1] == 2; b[1] := 1]
					}
	
					from q1 to q2 {
						[b[2] == 2; b[2] := 1]
					}
	
					from q1 to q2 {
						[b[3] == 2; b[3] := 1]
					}
	
					from q1 to error_state {
						[b[0] != 2  && b[1] != 2  && b[2] != 2  && b[3] != 2]
					}
	
					from q2 to q3 {
						[b[0] == 0; b[0] := 2]
					}
	
					from q2 to q3 {
						[b[1] == 0; b[1] := 2]
					}
	
					from q2 to q3 {
						[b[2] == 0; b[2] := 2]
					}
	
					from q2 to q3 {
						[b[3] == 0; b[3] := 2]
					}
	
					from q2 to error_state {
						[b[0] != 0  && b[1] != 0  && b[2] != 0  && b[3] != 0]
					}
	
					from q3 to idle {
						[sem := 1]
					}
	
				}
	
			slave_7 {
				variables
					
				initial idle
				states  q0 q1 q2 q3 error_state
				transitions
					from idle to q0 {
						[sem == 1; sem := 0]
					}
	
					from q0 to q1 {
						[b[0] == 1; b[0] := 0]
					}
	
					from q0 to q1 {
						[b[1] == 1; b[1] := 0]
					}
	
					from q0 to q1 {
						[b[2] == 1; b[2] := 0]
					}
	
					from q0 to q1 {
						[b[3] == 1; b[3] := 0]
					}
	
					from q0 to q1 {
						[b[0] != 1  && b[1] != 1  && b[2] != 1  && b[3] != 1]
					}
	
					from q1 to q2 {
						[b[0] == 2; b[0] := 1]
					}
	
					from q1 to q2 {
						[b[1] == 2; b[1] := 1]
					}
	
					from q1 to q2 {
						[b[2] == 2; b[2] := 1]
					}
	
					from q1 to q2 {
						[b[3] == 2; b[3] := 1]
					}
	
					from q1 to error_state {
						[b[0] != 2  && b[1] != 2  && b[2] != 2  && b[3] != 2]
					}
	
					from q2 to q3 {
						[b[0] == 0; b[0] := 2]
					}
	
					from q2 to q3 {
						[b[1] == 0; b[1] := 2]
					}
	
					from q2 to q3 {
						[b[2] == 0; b[2] := 2]
					}
	
					from q2 to q3 {
						[b[3] == 0; b[3] := 2]
					}
	
					from q2 to error_state {
						[b[0] != 0  && b[1] != 0  && b[2] != 0  && b[3] != 0]
					}
	
					from q3 to idle {
						[sem := 1]
					}
	
				}
	
			master_1 {
				variables
					
				initial idle
				states  q0 no_master master reading r0 no_readers change r1
				transitions
					from idle to q0 {
						[sem == 1; sem := 0]
					}
	
					from q0 to master {
						[b[0] == 3]
					}
	
					from q0 to master {
						[b[1] == 3]
					}
	
					from q0 to master {
						[b[2] == 3]
					}
	
					from q0 to master {
						[b[3] == 3]
					}
	
					from q0 to no_master {
						[b[0] != 3  && b[1] != 3  && b[2] != 3  && b[3] != 3]
					}
	
					from no_master to master {
						[b[0] == 1; b[0] := 3]
					}
	
					from no_master to master {
						[b[1] == 1; b[1] := 3]
					}
	
					from no_master to master {
						[b[2] == 1; b[2] := 3]
					}
	
					from no_master to master {
						[b[3] == 1; b[3] := 3]
					}
	
					from no_master to idle {
						[b[0] != 1  && b[1] != 1  && b[2] != 1  && b[3] != 1; sem := 1]
					}
	
					from master to reading {
						[readers := readers+1;sem := 1]
					}
	
					from reading to r0 {
						[sem == 1; sem := 0;readers := readers -1]
					}
	
					from r0 to no_readers {
						[readers ==0]
					}
	
					from r0 to r1 {
						[readers >0]
					}
	
					from no_readers to change {
						[b[0] == 1  || b[0] == 1  || b[0] == 1  || b[0] == 1; change_to := 0]
					}
	
					from no_readers to change {
						[b[0] != 1  && b[0] != 1  && b[0] != 1  && b[0] != 1; change_to := 1]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from r1 to idle {
						[sem := 1]
					}
	
				}
	
			master_2 {
				variables
					
				initial idle
				states  q0 no_master master reading r0 no_readers change r1
				transitions
					from idle to q0 {
						[sem == 1; sem := 0]
					}
	
					from q0 to master {
						[b[0] == 3]
					}
	
					from q0 to master {
						[b[1] == 3]
					}
	
					from q0 to master {
						[b[2] == 3]
					}
	
					from q0 to master {
						[b[3] == 3]
					}
	
					from q0 to no_master {
						[b[0] != 3  && b[1] != 3  && b[2] != 3  && b[3] != 3]
					}
	
					from no_master to master {
						[b[0] == 1; b[0] := 3]
					}
	
					from no_master to master {
						[b[1] == 1; b[1] := 3]
					}
	
					from no_master to master {
						[b[2] == 1; b[2] := 3]
					}
	
					from no_master to master {
						[b[3] == 1; b[3] := 3]
					}
	
					from no_master to idle {
						[b[0] != 1  && b[1] != 1  && b[2] != 1  && b[3] != 1; sem := 1]
					}
	
					from master to reading {
						[readers := readers+1;sem := 1]
					}
	
					from reading to r0 {
						[sem == 1; sem := 0;readers := readers -1]
					}
	
					from r0 to no_readers {
						[readers ==0]
					}
	
					from r0 to r1 {
						[readers >0]
					}
	
					from no_readers to change {
						[b[0] == 1  || b[0] == 1  || b[0] == 1  || b[0] == 1; change_to := 0]
					}
	
					from no_readers to change {
						[b[0] != 1  && b[0] != 1  && b[0] != 1  && b[0] != 1; change_to := 1]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from r1 to idle {
						[sem := 1]
					}
	
				}
	
			master_3 {
				variables
					
				initial idle
				states  q0 no_master master reading r0 no_readers change r1
				transitions
					from idle to q0 {
						[sem == 1; sem := 0]
					}
	
					from q0 to master {
						[b[0] == 3]
					}
	
					from q0 to master {
						[b[1] == 3]
					}
	
					from q0 to master {
						[b[2] == 3]
					}
	
					from q0 to master {
						[b[3] == 3]
					}
	
					from q0 to no_master {
						[b[0] != 3  && b[1] != 3  && b[2] != 3  && b[3] != 3]
					}
	
					from no_master to master {
						[b[0] == 1; b[0] := 3]
					}
	
					from no_master to master {
						[b[1] == 1; b[1] := 3]
					}
	
					from no_master to master {
						[b[2] == 1; b[2] := 3]
					}
	
					from no_master to master {
						[b[3] == 1; b[3] := 3]
					}
	
					from no_master to idle {
						[b[0] != 1  && b[1] != 1  && b[2] != 1  && b[3] != 1; sem := 1]
					}
	
					from master to reading {
						[readers := readers+1;sem := 1]
					}
	
					from reading to r0 {
						[sem == 1; sem := 0;readers := readers -1]
					}
	
					from r0 to no_readers {
						[readers ==0]
					}
	
					from r0 to r1 {
						[readers >0]
					}
	
					from no_readers to change {
						[b[0] == 1  || b[0] == 1  || b[0] == 1  || b[0] == 1; change_to := 0]
					}
	
					from no_readers to change {
						[b[0] != 1  && b[0] != 1  && b[0] != 1  && b[0] != 1; change_to := 1]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from r1 to idle {
						[sem := 1]
					}
	
				}
	
			master_4 {
				variables
					
				initial idle
				states  q0 no_master master reading r0 no_readers change r1
				transitions
					from idle to q0 {
						[sem == 1; sem := 0]
					}
	
					from q0 to master {
						[b[0] == 3]
					}
	
					from q0 to master {
						[b[1] == 3]
					}
	
					from q0 to master {
						[b[2] == 3]
					}
	
					from q0 to master {
						[b[3] == 3]
					}
	
					from q0 to no_master {
						[b[0] != 3  && b[1] != 3  && b[2] != 3  && b[3] != 3]
					}
	
					from no_master to master {
						[b[0] == 1; b[0] := 3]
					}
	
					from no_master to master {
						[b[1] == 1; b[1] := 3]
					}
	
					from no_master to master {
						[b[2] == 1; b[2] := 3]
					}
	
					from no_master to master {
						[b[3] == 1; b[3] := 3]
					}
	
					from no_master to idle {
						[b[0] != 1  && b[1] != 1  && b[2] != 1  && b[3] != 1; sem := 1]
					}
	
					from master to reading {
						[readers := readers+1;sem := 1]
					}
	
					from reading to r0 {
						[sem == 1; sem := 0;readers := readers -1]
					}
	
					from r0 to no_readers {
						[readers ==0]
					}
	
					from r0 to r1 {
						[readers >0]
					}
	
					from no_readers to change {
						[b[0] == 1  || b[0] == 1  || b[0] == 1  || b[0] == 1; change_to := 0]
					}
	
					from no_readers to change {
						[b[0] != 1  && b[0] != 1  && b[0] != 1  && b[0] != 1; change_to := 1]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from r1 to idle {
						[sem := 1]
					}
	
				}
	
			master_5 {
				variables
					
				initial idle
				states  q0 no_master master reading r0 no_readers change r1
				transitions
					from idle to q0 {
						[sem == 1; sem := 0]
					}
	
					from q0 to master {
						[b[0] == 3]
					}
	
					from q0 to master {
						[b[1] == 3]
					}
	
					from q0 to master {
						[b[2] == 3]
					}
	
					from q0 to master {
						[b[3] == 3]
					}
	
					from q0 to no_master {
						[b[0] != 3  && b[1] != 3  && b[2] != 3  && b[3] != 3]
					}
	
					from no_master to master {
						[b[0] == 1; b[0] := 3]
					}
	
					from no_master to master {
						[b[1] == 1; b[1] := 3]
					}
	
					from no_master to master {
						[b[2] == 1; b[2] := 3]
					}
	
					from no_master to master {
						[b[3] == 1; b[3] := 3]
					}
	
					from no_master to idle {
						[b[0] != 1  && b[1] != 1  && b[2] != 1  && b[3] != 1; sem := 1]
					}
	
					from master to reading {
						[readers := readers+1;sem := 1]
					}
	
					from reading to r0 {
						[sem == 1; sem := 0;readers := readers -1]
					}
	
					from r0 to no_readers {
						[readers ==0]
					}
	
					from r0 to r1 {
						[readers >0]
					}
	
					from no_readers to change {
						[b[0] == 1  || b[0] == 1  || b[0] == 1  || b[0] == 1; change_to := 0]
					}
	
					from no_readers to change {
						[b[0] != 1  && b[0] != 1  && b[0] != 1  && b[0] != 1; change_to := 1]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from r1 to idle {
						[sem := 1]
					}
	
				}
	
			master_6 {
				variables
					
				initial idle
				states  q0 no_master master reading r0 no_readers change r1
				transitions
					from idle to q0 {
						[sem == 1; sem := 0]
					}
	
					from q0 to master {
						[b[0] == 3]
					}
	
					from q0 to master {
						[b[1] == 3]
					}
	
					from q0 to master {
						[b[2] == 3]
					}
	
					from q0 to master {
						[b[3] == 3]
					}
	
					from q0 to no_master {
						[b[0] != 3  && b[1] != 3  && b[2] != 3  && b[3] != 3]
					}
	
					from no_master to master {
						[b[0] == 1; b[0] := 3]
					}
	
					from no_master to master {
						[b[1] == 1; b[1] := 3]
					}
	
					from no_master to master {
						[b[2] == 1; b[2] := 3]
					}
	
					from no_master to master {
						[b[3] == 1; b[3] := 3]
					}
	
					from no_master to idle {
						[b[0] != 1  && b[1] != 1  && b[2] != 1  && b[3] != 1; sem := 1]
					}
	
					from master to reading {
						[readers := readers+1;sem := 1]
					}
	
					from reading to r0 {
						[sem == 1; sem := 0;readers := readers -1]
					}
	
					from r0 to no_readers {
						[readers ==0]
					}
	
					from r0 to r1 {
						[readers >0]
					}
	
					from no_readers to change {
						[b[0] == 1  || b[0] == 1  || b[0] == 1  || b[0] == 1; change_to := 0]
					}
	
					from no_readers to change {
						[b[0] != 1  && b[0] != 1  && b[0] != 1  && b[0] != 1; change_to := 1]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from change to r1 {
						[b[0] == 3; b[0] := change_to]
					}
	
					from r1 to idle {
						[sem := 1]
					}
	
				}
	
	}

objects
	globalObject : GlobalClass
}
